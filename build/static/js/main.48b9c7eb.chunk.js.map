{"version":3,"sources":["logo.svg","components/login-button.js","components/logout-button.js","components/authentication-button.js","components/login-message.component.js","Images/hourglass1.jfif","components/loading-component.js","components/scorecards-list.component.js","components/edit-scorecards.component.js","components/create-scorecard.component.js","components/create-course.component.js","components/create-user.component.js","components/course-list.component.js","components/edit-course.component.js","Images/dgbasket.jpg","components/homepage-component.js","components/Navbar/NavBarElements.js","components/Navbar/index.js","components/Sidebar/SidebarElements.js","components/Sidebar/index.js","components/profile.component.js","auth/auth0-provider-with-history.js","App.js","reportWebVitals.js","index.js"],"names":["LoginButton","loginWithRedirect","useAuth0","className","onClick","LogoutButton","logout","returnTo","window","location","origin","AuthenticationButton","isAuthenticated","LoginMessage","Loading","src","load_image","width","height","Scorecard","props","scorecard","username","course","score","par","date","substring","to","_id","href","deleteScorecard","ScorecardList","state","scorecards","bind","axios","get","then","response","setState","data","catch","error","console","log","id","delete","res","this","filter","el","auth0","nickname","user","map","currentscorecard","isLoading","scorecardList","Component","withAuth0","EditScorecard","onChangeScores","idx","e","newScores","scores","sidx","target","value","onChangeCourse","onChangeDate","onSubmit","updateScores","Date","users","courses","isAuth","userAccount","length","i","match","params","name","holes","preventDefault","round_score","parseInt","post","new_best","best_score","new_worst","worst_score","rounds_played","ref","required","onChange","selected","type","CreateScorecard","email","CreateCourse","onAddHole","concat","onRemoveHole","s","onChangeHoles","newHoles","hole","onChangeName","onChangeLocation","temp","Course","deleteCourse","CourseList","currentcourse","courseList","EditCourse","Homepage","logo","Nav","styled","nav","NavbarContainer","div","NavLink","Link","Bars","NavMenu","NavBtn","Navbar","toggle","activeStyle","SidebarContainer","aside","isOpen","CloseIcon","FaTimes","Icon","SidebarWrapper","SidebarMenu","ul","SidebarLink","SideBtn","Sidebar","Profile","useState","matched","setMatched","player","setPlayer","useEffect","player_found","last_login","Auth0ProviderWithHistory","children","history","useHistory","domain","process","clientId","redirectUri","onRedirectCallback","appState","push","pathname","App","setIsOpen","path","exact","component","ScorecardsList","EditScorecards","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48b9c7eb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\n\r\nconst LoginButton = () => {\r\n\r\n    const { loginWithRedirect } = useAuth0();\r\n\r\n    return(\r\n\r\n        <button\r\n        className=\"btn btn-primary btn-block\"\r\n        onClick={() => loginWithRedirect()}\r\n        >\r\n            Log In\r\n        </button>\r\n\r\n    );\r\n\r\n\r\n};\r\n\r\nexport default LoginButton;","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst LogoutButton = () => {\r\n  const { logout } = useAuth0();\r\n  return (\r\n    <button\r\n      className=\"btn btn-danger btn-block\"\r\n      onClick={() =>\r\n        logout({\r\n          returnTo: window.location.origin,\r\n        })\r\n      }\r\n    >\r\n      Log Out\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default LogoutButton;","import React from \"react\";\r\n\r\nimport LoginButton from \"./login-button\";\r\nimport LogoutButton from \"./logout-button\";\r\n\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst AuthenticationButton = () => {\r\n  const { isAuthenticated } = useAuth0();\r\n\r\n  return isAuthenticated ? <LogoutButton /> : <LoginButton />;\r\n};\r\n\r\nexport default AuthenticationButton;","import React, { Component} from 'react';\r\nimport AuthenticationButton from \"./authentication-button\";\r\n\r\nconst LoginMessage = () => {\r\n\r\n    return (\r\n        <div className=\"outer_container\">\r\n            <div className=\"center_horz_vert\">\r\n                <div className=\"center_div_vert\">\r\n                    <h1>Please log in to view this page!</h1>\r\n                </div>\r\n                \r\n                <div className=\"center_button\">\r\n                    <AuthenticationButton className=\"center\"/>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginMessage;","export default __webpack_public_path__ + \"static/media/hourglass1.06cccd29.jfif\";","import React, { Component} from 'react';\r\nimport load_image from '../Images/hourglass1.jfif';\r\n\r\n\r\nconst Loading = () => {\r\n\r\n    return (\r\n        <div className=\"outer_container\">\r\n            <div className=\"loading\">\r\n                <h2>LOADING...</h2>\r\n                <div className=\"loading_image\">\r\n                    <img src={load_image} width=\"100\" height=\"100\"/>\r\n                </div>\r\n            </div>   \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loading;","import React, { Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { withAuth0 } from '@auth0/auth0-react';\r\nimport LoginMessage from \"./login-message.component\";\r\nimport Loading from \"./loading-component\";\r\n\r\n//creates a JSX element from the given scorecard properties\r\n//referenced in the scorecardList() function\r\nconst Scorecard = props => (\r\n    <tr>\r\n      <td>{props.scorecard.username}</td>\r\n      <td>{props.scorecard.course}</td>\r\n      <td>{props.scorecard.score} / {props.scorecard.par}</td>\r\n      <td>{props.scorecard.date.substring(0,10)}</td>\r\n      <td>\r\n        <Link to={\"/editscorecard/\"+props.scorecard._id}>edit</Link> | <a href=\"#\" onClick={() => { props.deleteScorecard(props.scorecard._id) }}>delete</a>\r\n      </td>\r\n    </tr>\r\n)\r\n\r\nclass ScorecardList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n       \r\n        this.state = {scorecards: []};\r\n        this.deleteScorecard = this.deleteScorecard.bind(this);\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        //get the scorecard data from the server\r\n        axios.get('https://birdie-tracker.herokuapp.com/scorecards/')\r\n        .then(response => {\r\n            this.setState({ scorecards: response.data})\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    //sends a delete request to the server and then filters\r\n    //the array to remove the deleted scorecard\r\n    deleteScorecard(id) {\r\n        axios.delete('https://birdie-tracker.herokuapp.com/scorecards/' + id)\r\n        .then(res => console.log(res.data));\r\n\r\n        this.setState({\r\n            scorecards: this.state.scorecards.filter(el => el._id !== id)\r\n        })\r\n    }\r\n\r\n    //maps each scorecard into a JSX element to be rendered\r\n   \r\n    scorecardList() {\r\n\r\n      const { isAuthenticated, user } = this.props.auth0;\r\n      const {nickname} = user;\r\n\r\n      if (isAuthenticated) {\r\n        return this.state.scorecards.map(currentscorecard => {\r\n          //only shows the scorecards for the logged in user.\r\n          if (currentscorecard.username == nickname) {\r\n            return <Scorecard scorecard={currentscorecard} deleteScorecard={this.deleteScorecard} key={currentscorecard._id}/>;\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    render() {\r\n\r\n      const { isLoading, isAuthenticated } = this.props.auth0;\r\n\r\n      if (isLoading) {\r\n        return <Loading />;\r\n      }\r\n\r\n      if (!isAuthenticated) { \r\n        return (\r\n            <div>\r\n              <LoginMessage/>\r\n            </div>\r\n        )\r\n      }\r\n      \r\n      return (\r\n\r\n        <div className=\"white_background\">\r\n          <h3>Logged Scorecards</h3>\r\n          <table className=\"table\">\r\n            <thead className=\"thead-light\">\r\n              <tr>\r\n                <th>Username</th>\r\n                <th>Course</th>\r\n                <th>Score</th>\r\n                <th>Date</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              { this.scorecardList() }\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )\r\n      }\r\n}\r\n\r\n//export withAuth0 to allow use of user's username for the scorecard\r\nexport default withAuth0(ScorecardList);","import React, { Component} from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from 'axios';\r\nimport { withAuth0 } from '@auth0/auth0-react';\r\n\r\nclass EditScorecard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeCourse = this.onChangeCourse.bind(this);\r\n        this.onChangeDate = this.onChangeDate.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.updateScores = this.updateScores.bind(this);\r\n        this.onChangeScores = this.onChangeScores.bind(this);\r\n\r\n        const {isAuthenticated } = this.props.auth0;\r\n\r\n        this.state = {\r\n          username: '',\r\n          course: '',\r\n          score: 0,\r\n          par: 0,\r\n          scores: [],\r\n          date: new Date(),\r\n          users: [],\r\n          courses: [],\r\n          isAuth: isAuthenticated,\r\n          userAccount: null,\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n\r\n      //user must be logged in or else we will be adding blank user objects\r\n      if (this.state.isAuth) {\r\n\r\n        //load in user data \r\n        axios.get('https://birdie-tracker.herokuapp.com/users/')\r\n        .then(response => {\r\n          if (response.data.length > 0) {\r\n\r\n            let matched = false;\r\n            //search through the users and find the one associated with our logged in user\r\n            for (let i = 0; i < response.data.length; i++) {\r\n              if (response.data[i].username == this.state.username) {\r\n                  console.log(\"Match found\");\r\n\r\n                  //once correct user is found, save their info in the state to be used later\r\n                  //when updating the user object. \r\n                  this.setState(state => ({\r\n                    ...state,\r\n                    userAccount: response.data[i],\r\n                  }))\r\n                  matched = true;\r\n                  break;\r\n              }\r\n            }\r\n          }\r\n        })\r\n\r\n       //load in scorecard data from selected scorecard\r\n        axios.get('https://birdie-tracker.herokuapp.com/scorecards/'+this.props.match.params.id)\r\n        .then(response => {\r\n            this.setState({\r\n                username: response.data.username,\r\n                course: response.data.course,\r\n                score: response.data.score,\r\n                scores: response.data.scores,\r\n                date: new Date(response.data.date),\r\n                par: response.data.par,\r\n            })\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n\r\n        //load in course data for dropdown select\r\n        axios.get('https://birdie-tracker.herokuapp.com/courses/')\r\n        .then(response => {\r\n          if (response.data.length > 0) {\r\n            this.setState(state => ({...state,\r\n              courses: response.data,\r\n            }), () => {\r\n              //callback function to ensure state is updated before elements are rendered\r\n            })\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n\r\n    //loops through the courses array to find the one the user selected\r\n    //then updates the state with the corresponding values for scores and par\r\n    //so that the form elements for the individual scores can be rendered\r\n    updateScores() {\r\n      //set the number of holes based on which course is selected\r\n      for (let i = 0; i < this.state.courses.length; i++) {\r\n        if (this.state.courses[i].name == this.state.course) {\r\n          this.setState(state=> ({...state, \r\n            scores: this.state.courses[i].holes,\r\n            par: this.state.courses[i].par}), () => {\r\n            //callback function to ensure state is updated before elements are rendered\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    //triggered by the user changing the score for an individual hole\r\n    onChangeScores = idx => e => {\r\n      const newScores = this.state.scores.map((score, sidx) => {\r\n          if (idx !== sidx) return score;\r\n          return {...score, par: e.target.value };\r\n      });\r\n\r\n      this.setState(state => ({...state, scores: newScores}), () => {\r\n        //callback function to ensure state is updated before elements are rendered\r\n      });\r\n  }\r\n\r\n    //triggered by the user changing the course in the select field\r\n    //calls updateScores() method to re-render the holes for the newly selected course\r\n    onChangeCourse(e) {\r\n      this.setState(state => ({...state, course: e.target.value}), () => {\r\n        this.updateScores();\r\n      })\r\n  }\r\n\r\n    //triggered by the user changing the date value in the select field\r\n    onChangeDate(date) {\r\n        this.setState({\r\n            date: date\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        //calculate the total score based on the individual holes\r\n        let round_score = 0;\r\n        for (let i = 0; i < this.state.scores.length; i++) {\r\n          round_score = round_score + parseInt(this.state.scores[i].par);\r\n        }\r\n\r\n        //set the score in the stat and wait to post the new\r\n        //scorecard until the state is updated by using\r\n        //callback function\r\n        this.setState(state => ({...state, score: round_score}), () => {\r\n        \r\n          const scorecard = {\r\n            username: this.state.username,\r\n            course: this.state.course,\r\n            score: this.state.score,\r\n            date: this.state.date,\r\n            scores: this.state.scores,\r\n            par: this.state.par\r\n          }\r\n\r\n          //save the updated scorecard to the database\r\n          axios.post('https://birdie-tracker.herokuapp.com/scorecards/update/'+this.props.match.params.id, scorecard)\r\n          .then(res => console.log(res.data))\r\n          .catch((error) => {\r\n            console.log(error);\r\n          })\r\n        \r\n        })\r\n\r\n        //can only update user statistics if a user account exists\r\n        if (this.state.userAccount != null) {\r\n\r\n          let new_best = this.state.userAccount.best_score;\r\n          let new_worst = this.state.userAccount.worst_score;\r\n          let score = round_score - this.state.par;\r\n          if ( score < this.state.userAccount.best_score) {\r\n            new_best = score;\r\n          }\r\n          if ( score > this.state.userAccount.worst_score) {\r\n            new_worst = score;\r\n          }\r\n          \r\n\r\n          const user = {\r\n            username: this.state.userAccount.username,\r\n            rounds_played: this.state.userAccount.rounds_played,\r\n            best_score: new_best,\r\n            worst_score: new_worst,\r\n          }\r\n  \r\n          console.log(user);\r\n          \r\n          //update the user object in the database\r\n          axios.post('https://birdie-tracker.herokuapp.com/users/update/'+this.state.userAccount._id, user)\r\n          .then(res => console.log(res.data))\r\n          .catch((error) => {\r\n            console.log(error);\r\n          })\r\n\r\n        }\r\n\r\n        //redirect the user back to the scorecard list page\r\n        window.location = 'https://birdie-tracker.netlify.app/scorecardlist';\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div className = \"scorecard_elements\">\r\n\r\n          <div className =\"profile_header\">\r\n              <h3>Edit Scorecard</h3>\r\n          </div>\r\n\r\n          <form onSubmit={this.onSubmit}>\r\n\r\n            <div className=\"form-group\"> \r\n              <label>Course: </label>\r\n              <select ref=\"userInput\"\r\n                  required\r\n                  className=\"form-control\"\r\n                  value={this.state.course}\r\n                  onChange={this.onChangeCourse}>\r\n                  {\r\n                    this.state.courses.map(function(course) {\r\n                      return <option \r\n                        key={course.name}\r\n                        value={course.name}>{course.name}\r\n                        </option>;\r\n                    })\r\n                  }\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Date: </label>\r\n              <div>\r\n                <DatePicker\r\n                  selected={this.state.date}\r\n                  onChange={this.onChangeDate}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"score_boxes\">\r\n              {this.state.scores.map((score, idx) => (\r\n                  <div className=\"score\" key={score._id}>\r\n                    <label>Hole {idx + 1} score: </label>\r\n                      <div>\r\n                        <input\r\n                            type=\"number\"\r\n                            value={score.par}\r\n                            onChange={this.onChangeScores(idx)}\r\n                        />\r\n                      </div>\r\n                  </div>\r\n              ))}\r\n            </div>\r\n    \r\n            <div className=\"form-group\">\r\n              <input type=\"submit\" value=\"Submit Changes\" className=\"btn btn-primary\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n        )\r\n      }\r\n}\r\n\r\n//export withAuth0 to allow use of user's username for the scorecard\r\nexport default withAuth0(EditScorecard);","import React, { Component} from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from 'axios';\r\nimport { withAuth0 } from '@auth0/auth0-react';\r\nimport LoginMessage from \"./login-message.component\";\r\n\r\nclass CreateScorecard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeCourse = this.onChangeCourse.bind(this);\r\n        this.onChangeDate = this.onChangeDate.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.updateScores = this.updateScores.bind(this);\r\n        this.onChangeScores = this.onChangeScores.bind(this);\r\n\r\n        const {isAuthenticated } = this.props.auth0;\r\n\r\n        if (isAuthenticated) {\r\n          const { user } = this.props.auth0;\r\n          const {nickname, email} = user;\r\n          this.state = {\r\n            username: nickname,\r\n            course: '',\r\n            score: 0,\r\n            par: 0,\r\n            scores: [],\r\n            date: new Date(),\r\n            users: [],\r\n            courses: [],\r\n            isAuth: isAuthenticated,\r\n            userAccount: null,\r\n          }\r\n        }\r\n\r\n        else {\r\n          this.state = {\r\n            username: '',\r\n            course: '',\r\n            score: 0,\r\n            par: 0,\r\n            scores: [],\r\n            date: new Date(),\r\n            users: [],\r\n            courses: [],\r\n            isAuth: false,\r\n            userAccount: null,\r\n        }\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n      //user must be logged in or else we will be adding blank user objects\r\n      if (this.state.isAuth) {\r\n\r\n        //load in user data \r\n        axios.get('https://birdie-tracker.herokuapp.com/users/')\r\n        .then(response => {\r\n          if (response.data.length > 0) {\r\n\r\n            let matched = false;\r\n            //search through the users and find the one associated with our logged in user\r\n            for (let i = 0; i < response.data.length; i++) {\r\n              if (response.data[i].username == this.state.username) {\r\n                  console.log(\"Match found\");\r\n\r\n                  //once correct user is found, save their info in the state to be used later\r\n                  //when updating the user object. \r\n                  this.setState(state => ({\r\n                    ...state,\r\n                    userAccount: response.data[i],\r\n                  }))\r\n                  matched = true;\r\n                  break;\r\n              }\r\n            }\r\n          }\r\n        })\r\n\r\n        //load in course data for dropdown select\r\n        axios.get('https://birdie-tracker.herokuapp.com/courses/')\r\n        .then(response => {\r\n          if (response.data.length > 0) {\r\n            this.setState(state => ({...state,\r\n              courses: response.data,\r\n              course: response.data[0].name,\r\n              scores: response.data[0].holes,\r\n              holes: response.data[0].holes,\r\n              par: response.data[0].par,\r\n            }), () => {\r\n              //callback function to ensure state is updated before elements are rendered\r\n            })\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    //loops through the courses array to find the one the user selected\r\n    //then updates the state with the corresponding values for scores and par\r\n    //so that the form elements for the individual scores can be rendered\r\n    updateScores() {\r\n      //set the number of holes based on which course is selected\r\n      for (let i = 0; i < this.state.courses.length; i++) {\r\n        if (this.state.courses[i].name == this.state.course) {\r\n          this.setState(state=> ({...state, \r\n            scores: this.state.courses[i].holes,\r\n            par: this.state.courses[i].par}), () => {\r\n            //callback function to ensure state is updated before elements are rendered\r\n\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    //triggered by the user changing the score for an individual hole\r\n    onChangeScores = idx => e => {\r\n      const newScores = this.state.scores.map((score, sidx) => {\r\n          if (idx !== sidx) return score;\r\n          return {...score, par: e.target.value };\r\n      });\r\n\r\n      this.setState(state => ({...state, scores: newScores}), () => {\r\n        //callback function to ensure state is updated before elements are rendered\r\n      });\r\n  }\r\n\r\n    //triggered by the user changing the course\r\n    //calls updateScores() function to re-render the holes for the newly selected course\r\n    onChangeCourse(e) {\r\n        this.setState(state => ({...state, course: e.target.value}), () => {\r\n          this.updateScores();\r\n        })\r\n    }\r\n\r\n    //triggered by the user changing the date in the select field\r\n    onChangeDate(date) {\r\n        this.setState({\r\n            date: date\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        //calculate the total score based on the individual holes\r\n        let round_score = 0;\r\n        for (let i = 0; i < this.state.scores.length; i++) {\r\n          round_score = round_score + parseInt(this.state.scores[i].par);\r\n        }\r\n\r\n        //set the score in the state and wait to post the new\r\n        //scorecard until the state is updated by using\r\n        //callback function\r\n        this.setState(state => ({...state, score: round_score}), () => {\r\n\r\n          const scorecard = {\r\n            username: this.state.username,\r\n            course: this.state.course,\r\n            score: this.state.score,\r\n            date: this.state.date,\r\n            scores: this.state.scores,\r\n            par: this.state.par\r\n          }\r\n\r\n          axios.post('https://birdie-tracker.herokuapp.com/scorecards/add', scorecard)\r\n          .then(res => console.log(res.data));\r\n\r\n        })\r\n\r\n        //can only update user statistics if a user account exists\r\n        if (this.state.userAccount != null) {\r\n\r\n          let new_best = this.state.userAccount.best_score;\r\n          let new_worst = this.state.userAccount.worst_score;\r\n          let score = round_score - this.state.par;\r\n          if ( score < this.state.userAccount.best_score) {\r\n            new_best = score;\r\n          }\r\n          if ( score > this.state.userAccount.worst_score) {\r\n            new_worst = score;\r\n          }\r\n          \r\n\r\n          const user = {\r\n            username: this.state.userAccount.username,\r\n            //update the user object by adding one to the number of rounds played\r\n            rounds_played: this.state.userAccount.rounds_played + 1,\r\n            best_score: new_best,\r\n            worst_score: new_worst,\r\n          }\r\n  \r\n          console.log(user);\r\n          \r\n          //update the user object in the database\r\n          axios.post('https://birdie-tracker.herokuapp.com/users/update/'+this.state.userAccount._id, user)\r\n          .then(res => console.log(res.data))\r\n          .catch((error) => {\r\n            console.log(error);\r\n          })\r\n\r\n        }\r\n        \r\n        window.location = 'https://birdie-tracker.netlify.app/scorecardlist';\r\n    }\r\n\r\n    render() {\r\n\r\n      if (!this.state.isAuth) { \r\n        return (\r\n            <div>\r\n              <LoginMessage/>\r\n            </div>\r\n        )\r\n      }\r\n\r\n        return (\r\n        <div className = \"scorecard_elements\">\r\n\r\n          <div className =\"profile_header\">\r\n            <h3>Create Scorecard</h3>\r\n          </div>\r\n\r\n          <form onSubmit={this.onSubmit}>\r\n\r\n            <div className=\"form-group\"> \r\n              <label>Course: </label>\r\n              <select ref=\"userInput\"\r\n                  required\r\n                  className=\"form-control\"\r\n                  value={this.state.course}\r\n                  onChange={this.onChangeCourse}>\r\n                  {\r\n                    this.state.courses.map(function(course) {\r\n                      return <option \r\n                        key={course.name}\r\n                        value={course.name}>{course.name}\r\n                        </option>;\r\n                    })\r\n                  }\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Date: </label>\r\n              <div>\r\n                <DatePicker\r\n                  selected={this.state.date}\r\n                  onChange={this.onChangeDate}\r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"score_boxes\">\r\n              {this.state.scores.map((score, idx) => (\r\n                  <div className=\"score\" key={score._id}>\r\n                    <label>Hole {idx + 1} score: </label>\r\n                      <div>\r\n                        <input\r\n                            type=\"number\"\r\n                            value={score.par}\r\n                            onChange={this.onChangeScores(idx)}\r\n                        />\r\n                      </div>\r\n                  </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input type=\"submit\" value=\"Create Scorecard\" className=\"btn btn-primary\" />\r\n            </div>\r\n          </form>\r\n\r\n        </div>\r\n        )\r\n      }\r\n}\r\n\r\n//export withAuth0 to allow use of user's username for the scorecard\r\nexport default withAuth0(CreateScorecard);","import React, { Component} from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {useAuth0, withAuthenticationRequired } from \"@auth0/auth0-react\";\r\nimport axios from 'axios';\r\nimport { withAuth0 } from '@auth0/auth0-react';\r\nimport LoginMessage from \"./login-message.component\";\r\n\r\n\r\nclass CreateCourse extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeName = this.onChangeName.bind(this);\r\n        this.onChangeLocation = this.onChangeLocation.bind(this);\r\n        this.onChangeHoles = this.onChangeHoles.bind(this);\r\n        this.onAddHole = this.onAddHole.bind(this);\r\n        this.onRemoveHole = this.onRemoveHole.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        const { isAuthenticated } = this.props.auth0;\r\n\r\n        if (isAuthenticated) {\r\n          const { user } = this.props.auth0;\r\n          const {nickname, email} = user;\r\n          this.state = {\r\n            name: '',\r\n            location: '',\r\n            holes: [],\r\n            par: 0,\r\n            isAuth: isAuthenticated\r\n            }\r\n        }\r\n\r\n        else {\r\n            this.state = {\r\n                name: '',\r\n                location: '',\r\n                holes: [],\r\n                par: 0,\r\n                isAuth: false\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    //triggered by the user changing the username in the select field\r\n    onChangeName(e) {\r\n        this.setState({\r\n            name: e.target.value\r\n        })\r\n    }\r\n\r\n    //triggered by the user changing the location in the select field\r\n    onChangeLocation(e) {\r\n        this.setState({\r\n            location: e.target.value\r\n        })\r\n    }\r\n\r\n    //triggered by the user clicking the \"add hole\" button\r\n    onAddHole = () => {\r\n        this.setState({\r\n            holes: this.state.holes.concat([{par: 3}])\r\n        })\r\n    }\r\n\r\n    //triggered by the user clicking the \"-\" button to remove a hole\r\n    onRemoveHole = idx => () => {\r\n        this.setState({\r\n            holes: this.state.holes.filter((s, sidx) => idx !== sidx)\r\n        })\r\n    }\r\n\r\n    //triggered if the user changes the par value for a certain hole\r\n    onChangeHoles = idx => e => {\r\n        const newHoles = this.state.holes.map((hole, sidx) => {\r\n            if (idx !== sidx) return hole;\r\n            return {...hole, par: e.target.value };\r\n        });\r\n\r\n        this.setState(state => ({...state, holes: newHoles}), () => {\r\n            //callback function to ensure state is updated before elements are rendered\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        //calculate the overall par for the entire course to be stored in the state\r\n        let temp = 0;\r\n        for (let i = 0; i < this.state.holes.length; i++) {\r\n            temp = temp + parseInt(this.state.holes[i].par);\r\n        }\r\n\r\n        //store the overall par score in the state\r\n        this.setState(state => ({...state, par: temp}), () => {\r\n            //callback function to ensure state is updated before elements are rendered\r\n\r\n            const course = {\r\n                name: this.state.name,\r\n                location: this.state.location,\r\n                holes: this.state.holes,\r\n                par: this.state.par            \r\n            }\r\n            \r\n            //post the course to the database\r\n            axios.post('https://birdie-tracker.herokuapp.com/courses/add', course)\r\n            .then(res => console.log(res.data));\r\n        \r\n            //redirect back to the course list page\r\n            window.location = 'https://birdie-tracker.netlify.app/courselist';\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.state.isAuth) { \r\n            return (\r\n                <div>\r\n                  <LoginMessage/>\r\n                </div>\r\n            )\r\n          }\r\n\r\n        return (\r\n        <div className=\"scorecard_elements\">\r\n\r\n            <div className =\"profile_header\">\r\n                <h3>Create Course</h3>\r\n            </div>\r\n\r\n          <form onSubmit={this.onSubmit}>\r\n            <div className=\"form-group\"> \r\n                <label>Name: </label>\r\n                <input  type=\"text\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={this.state.name}\r\n                    onChange={this.onChangeName}\r\n                    />\r\n                </div>\r\n            <div>\r\n                \r\n            </div>\r\n            <div className=\"form-group\"> \r\n              <label>Location: </label>\r\n              <input  type=\"text\"\r\n                  required\r\n                  className=\"form-control\"\r\n                  value={this.state.location}\r\n                  onChange={this.onChangeLocation}\r\n                  />\r\n            </div>\r\n\r\n            <div className=\"score_boxes\">\r\n                {this.state.holes.map((hole, idx) => (\r\n                    <div className=\"hole\" key={hole._id}>\r\n                        <input\r\n                            type=\"number\"\r\n                            value={hole.par}\r\n                            onChange={this.onChangeHoles(idx)}\r\n                        />\r\n                        <button\r\n                            type = \"button\"\r\n                            onClick={this.onRemoveHole(idx)}\r\n                            className=\"small\"\r\n                        >\r\n                            -\r\n                        </button>\r\n                    </div>\r\n                ))}\r\n            \r\n                <button\r\n                    type=\"button\"\r\n                    onClick={this.onAddHole}\r\n                    className=\"small\"\r\n                >\r\n                    Add Hole\r\n                </button>\r\n\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input type=\"submit\" value=\"Create Course\" className=\"btn btn-primary\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n        )\r\n      }\r\n}\r\n\r\nexport default withAuth0(CreateCourse);","import React, { Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class CreateUser extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            username: '',\r\n        }\r\n    }\r\n\r\n    //triggered by the user changing the username value in the select field\r\n    onChangeUsername(e) {\r\n        this.setState({\r\n            username: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const user = {\r\n            username: this.state.username,\r\n        }\r\n\r\n        axios.post('https://birdie-tracker.herokuapp.com/users/add', user)\r\n        .then(res => console.log(res.data));\r\n\r\n        this.setState({\r\n            username: '',\r\n        })\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div>\r\n            <h3>Create New User</h3>\r\n            <form onSubmit={this.onSubmit}>\r\n              <div className=\"form-group\"> \r\n                <label>Username: </label>\r\n                <input  type=\"text\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChangeUsername}\r\n                    />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input type=\"submit\" value=\"Create User\" className=\"btn btn-primary\" />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        )\r\n      }\r\n}","import React, { Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n//creates a JSX element from given course properties\r\n//referenced in the courseList() function\r\nconst Course = props => (\r\n    <tr>\r\n      <td>{props.course.name}</td>\r\n      <td>{props.course.location}</td>\r\n      <td>{props.course.holes.length}</td>\r\n      <td>\r\n        <Link to={\"/editcourse/\"+props.course._id}>edit</Link> | <a href=\"#\" onClick={() => { props.deleteCourse(props.course._id) }}>delete</a>\r\n      </td>\r\n    </tr>\r\n)\r\n\r\n//test function that maps an array of holes\r\n//into html to be displayed on the screen\r\n//saving this for later to be used in the \"view course\" pages\r\nconst Test = ({holes}) => (\r\n  <> \r\n    {holes.map(hole => (\r\n      <div className=\"hole\" key={hole._id}>{hole.par}</div>\r\n    ))}\r\n  </>\r\n)\r\n\r\nexport default class CourseList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.deleteCourse = this.deleteCourse.bind(this);\r\n\r\n        this.state = {courses: [] };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        //get course data from database\r\n        axios.get('https://birdie-tracker.herokuapp.com/courses/')\r\n        .then(response => {\r\n            this.setState({ courses: response.data})\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    //sends a delete request to the database\r\n    //and then filters the deleted course from the array\r\n    deleteCourse(id) {\r\n        axios.delete('https://birdie-tracker.herokuapp.com/courses/' + id)\r\n        .then(res => console.log(res.data));\r\n\r\n        this.setState({\r\n            courses: this.state.courses.filter(el => el._id !== id)\r\n        })\r\n    }\r\n\r\n    //maps the course array into individual \r\n    //JSX elements to be rendered\r\n    courseList() {\r\n        return this.state.courses.map(currentcourse => {\r\n          return <Course course={currentcourse} deleteCourse={this.deleteCourse} key={currentcourse._id}/>;\r\n        })\r\n      }\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"white_background\">\r\n            <h3 >Course List</h3>\r\n            <table className=\"table\">\r\n              <thead className=\"thead-light\">\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <th>Location</th>\r\n                  <th>Holes</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                { this.courseList() }\r\n              </tbody>\r\n            </table>\r\n            \r\n          </div>\r\n        )\r\n      }\r\n}","import React, { Component} from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from 'axios';\r\n\r\nexport default class EditCourse extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeName = this.onChangeName.bind(this);\r\n        this.onChangeLocation = this.onChangeLocation.bind(this);\r\n        this.onChangeHoles = this.onChangeHoles.bind(this);\r\n        this.onAddHole = this.onAddHole.bind(this);\r\n        this.onRemoveHole = this.onRemoveHole.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            name: '',\r\n            location: '',\r\n            holes: [],\r\n            par: 0,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        //get currrent course data to populate state variables\r\n        axios.get('https://birdie-tracker.herokuapp.com/courses/'+this.props.match.params.id)\r\n        .then(response => {\r\n            this.setState({\r\n                name: response.data.name,\r\n                location: response.data.location,\r\n                holes: response.data.holes,\r\n                par: response.data.par,\r\n            })\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    //triggered by user changing course name in the select field\r\n    onChangeName(e) {\r\n        this.setState({\r\n            name: e.target.value\r\n        })\r\n    }\r\n\r\n    //triggered by the user changing location in the select field\r\n    onChangeLocation(e) {\r\n        this.setState({\r\n            location: e.target.value\r\n        })\r\n    }\r\n\r\n    //triggered when user clicks \"add hole\" button\r\n    onAddHole = () => {\r\n        this.setState({\r\n            holes: this.state.holes.concat([{par: 3}])\r\n        })\r\n    }\r\n\r\n    //triggered by user clicking \"-\" button to remove a hole\r\n    onRemoveHole = idx => () => {\r\n        this.setState({\r\n            holes: this.state.holes.filter((s, sidx) => idx !== sidx)\r\n        })\r\n    }\r\n\r\n    //triggered by user changing the par value of a single hole\r\n    onChangeHoles = idx => e => {\r\n        const newHoles = this.state.holes.map((hole, sidx) => {\r\n            if (idx !== sidx) return hole;\r\n            return {...hole, par: e.target.value };\r\n        });\r\n\r\n        this.setState(state => ({...state, holes: newHoles}), () => {\r\n            //callback function to ensure state is updated before elements are rendered\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        //calculate the total par for the entire course\r\n        let temp = 0;\r\n        for (let i = 0; i < this.state.holes.length; i++) {\r\n            temp = temp + parseInt(this.state.holes[i].par);\r\n        }\r\n\r\n        //store the total par in the state and then save the updated course object\r\n        this.setState(state => ({...state, par: temp}), () => {\r\n            //callback function to ensure state is updated before elements are rendered\r\n        \r\n            const course = {\r\n                name: this.state.name,\r\n                location: this.state.location,\r\n                holes: this.state.holes,\r\n                par: this.state.par \r\n            }\r\n    \r\n            axios.post('https://birdie-tracker.herokuapp.com/courses/update/'+this.props.match.params.id, course)\r\n            .then(res => console.log(res.data))\r\n            .catch((error) => {\r\n              console.log(error);\r\n            })\r\n    \r\n            //redirect the user back to the course list page\r\n            window.location = 'https://birdie-tracker.netlify.app/courselist';\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n          <h3>Change Courses</h3>\r\n          <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\"> \r\n                <label>Name: </label>\r\n                <input  type=\"text\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={this.state.name}\r\n                    onChange={this.onChangeName}\r\n                    />\r\n                </div>\r\n            <div>\r\n                \r\n            </div>\r\n            <div className=\"form-group\"> \r\n              <label>Location: </label>\r\n              <input  type=\"text\"\r\n                  required\r\n                  className=\"form-control\"\r\n                  value={this.state.location}\r\n                  onChange={this.onChangeLocation}\r\n                  />\r\n            </div>\r\n\r\n            {this.state.holes.map((hole, idx) => (\r\n                <div className=\"hole\" key={hole._id}>\r\n                    <input\r\n                        type=\"number\"\r\n                        value={hole.par}\r\n                        onChange={this.onChangeHoles(idx)}\r\n                    />\r\n                    <button\r\n                        type = \"button\"\r\n                        onClick={this.onRemoveHole(idx)}\r\n                        className=\"small\"\r\n                    >\r\n                        -\r\n                    </button>\r\n                </div>\r\n            ))}\r\n            <button\r\n                type=\"button\"\r\n                onClick={this.onAddHole}\r\n                className=\"small\"\r\n            >\r\n                Add Hole\r\n            </button>\r\n    \r\n            <div className=\"form-group\">\r\n              <input type=\"submit\" value=\"Submit Changes\" className=\"btn btn-primary\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n        )\r\n      }\r\n}","export default __webpack_public_path__ + \"static/media/dgbasket.d8fcc474.jpg\";","import React, { Component} from 'react';\r\nimport axios from 'axios';\r\nimport logo from '../Images/dgbasket.jpg';\r\nimport AuthenticationButton from \"./authentication-button\";\r\n\r\nexport default class Homepage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n          <div>\r\n\r\n            <div>\r\n              <h3 className=\"header_centered\">Welcome to BirdieTracker!</h3>\r\n            </div>\r\n\r\n            <img src={logo} width=\"600\" height=\"600\" className=\"center_div_horz\"/>\r\n\r\n            <div className =\"profile_message\">\r\n                <h2>Your personal disc golf score tracking assistant</h2>\r\n            </div>\r\n\r\n          </div>\r\n        )\r\n      }\r\n}","\r\nimport styled from 'styled-components';\r\nimport { NavLink as Link } from 'react-router-dom';\r\n\r\nexport const Nav = styled.nav`\r\n    background: #000;\r\n    height: 80px;\r\n    display: flex;\r\n    font-size: 22px;\r\n    top: 0;\r\n    justify-content: space-between;\r\n    padding: 0px 0px;\r\n    z-index: 10;\r\n`;\r\n\r\n//might not actually need this\r\nexport const NavbarContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    height: 80px;\r\n    z-index: 1;\r\n    width: 100%;\r\n    padding: 0 24px;\r\n    width: 2100px;\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n    color: #fff;\r\n    display: inline-block;\r\n    text-align: center; \r\n    vertical-align: middle;\r\n    line-height: 80px;\r\n\r\n    text-decoration: none;\r\n    padding: 0 1rem;\r\n    height: 100%;\r\n    cursor: pointer;\r\n    width: fit-content;\r\n\r\n    &.active{\r\n        color: #15cdfc;\r\n    }\r\n`;\r\n\r\nexport const Bars = styled.div`\r\n    display: none;\r\n    color: #fff;\r\n\r\n    @media screen and (max-width: 1250px) {\r\n        display: flex;\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        transform: translate(-100%, 60%);\r\n        font-size: 1.8rem;\r\n        cursor: pointer;\r\n\r\n    }\r\n`;\r\n\r\nexport const NavMenu = styled.div`\r\n    display: flex;\r\n    align-items: space-between;\r\n    margin-right: -24px;\r\n    height: 100%;\r\n\r\n    @media screen and (max-width: 1250px) {\r\n        display: none;\r\n    }\r\n`;\r\n\r\nexport const NavBtn = styled.nav`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-right: 34px;\r\n    margin-left: 34px;\r\n\r\n    @media screen and (max-width: 1250px) {\r\n        display: none;\r\n    }\r\n`;\r\n\r\nexport const NavBtnLink = styled(Link)`\r\n    border-radius: 4px;\r\n    background: #256ce1;\r\n    padding: 10px 22px;\r\n    color: #fff;\r\n    border: none;\r\n    outline: none;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease-in-out;\r\n    text-decoration: none;\r\n\r\n    &:hover {\r\n        transition all 0.2s ease-in-out;\r\n        background: #fff;\r\n        color: #010606;\r\n    }\r\n`;\r\n\r\n","import React from 'react'\r\nimport {FaBars} from 'react-icons/fa';\r\nimport { Nav, NavLink, NavbarContainer, Bars, NavMenu, NavBtn, NavBtnLink} from './NavBarElements'\r\nimport AuthenticationButton from \"../authentication-button\";\r\n\r\nconst Navbar = ({toggle}) => {\r\n    return (\r\n        <>\r\n            <Nav>\r\n                <NavbarContainer>\r\n                    <NavLink  to=\"/\">\r\n                        BirdieTracker\r\n                    </NavLink>\r\n                    <Bars onClick={toggle}>\r\n                        <FaBars/>\r\n                    </Bars>\r\n                    <NavMenu>\r\n                        <NavLink to=\"/scorecardlist\" activeStyle>\r\n                            Scorecards\r\n                        </NavLink>\r\n                        <NavLink to=\"/createscorecard\" activeStyle>\r\n                            Create Scorecard\r\n                        </NavLink>\r\n                        <NavLink to=\"/createcourse\" activeStyle>\r\n                            Create Course\r\n                        </NavLink>\r\n                        <NavLink to=\"/courselist\" activeStyle>\r\n                            Courses\r\n                        </NavLink>\r\n                        <NavLink to=\"/profile\" activeStyle>\r\n                            Profile\r\n                        </NavLink>\r\n                    </NavMenu>\r\n                    <NavBtn>\r\n                        <AuthenticationButton/>\r\n                    </NavBtn>\r\n                </NavbarContainer>\r\n            </Nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar","import styled from 'styled-components';\r\nimport {FaTimes} from 'react-icons/fa';\r\nimport { NavLink as Link } from 'react-router-dom';\r\n\r\n//only displays when the sidebar has been opened\r\nexport const SidebarContainer = styled.aside`\r\n    position: fixed;\r\n    z-index: 999;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: #0d0d0d;\r\n    display: grid;\r\n    align-items: center;\r\n    top: 0;\r\n    left: 0;\r\n    transition: 0.3s ease-in-out;\r\n    opacity: ${({ isOpen}) => (isOpen ? '100' : '0')};\r\n    top: ${({isOpen }) => (isOpen ? '0' : '-100%')};\r\n`;\r\n\r\nexport const CloseIcon = styled(FaTimes)`\r\n    color: #fff;\r\n`;\r\n\r\nexport const Icon = styled.div`\r\n    position: absolute;\r\n    top: 1.2rem;\r\n    right: 1.5rem;\r\n    background: transparent;\r\n    font-size: 2rem;\r\n    cursor: pointer;\r\n    outline: none;\r\n`;\r\n\r\nexport const SidebarWrapper = styled.div`\r\n    color: #fff;\r\n`;\r\n\r\nexport const SidebarMenu = styled.ul`\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: repeat(7,80px);\r\n    text-align: center;\r\n\r\n    @media screen and (max-width: 480px) {\r\n        grid-template-rows: repeat(7, 60px);\r\n    }\r\n`;\r\n\r\nexport const SidebarLink = styled(Link)`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 1.5rem;\r\n    text-deceoration: none;\r\n    list-style: none;\r\n    transition: 0.2s ease-in-out;\r\n    text-decoration: none;\r\n    color: #fff;\r\n    cursor: pointer;\r\n\r\n    $:hover {\r\n        color: #01bf71;\r\n        transition: 0.2s ease-in-out;\r\n    }\r\n`;\r\n\r\nexport const SideBtn = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const SideBtnLink = styled(Link)`\r\n    border-radius: 4px;\r\n    background: #256ce1;\r\n    padding: 10px 22px;\r\n    color: #fff;\r\n    border: none;\r\n    outline: none;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease-in-out;\r\n    text-decoration: none;\r\n\r\n    &:hover {\r\n        transition all 0.2s ease-in-out;\r\n        background: #fff;\r\n        color: #010606;\r\n    }\r\n`;","import { Auth0Provider } from '@auth0/auth0-react';\r\nimport React from 'react';\r\nimport AuthenticationButton from '../authentication-button';\r\nimport { \r\n    SidebarContainer, \r\n    Icon, \r\n    CloseIcon, \r\n    SidebarLink, \r\n    SideBtn, \r\n    SidebarMenu,\r\n    SidebarWrapper,\r\n    SideBtnLink } from './SidebarElements';\r\n\r\nconst Sidebar = ({isOpen, toggle}) => {\r\n    return (\r\n        <SidebarContainer isOpen={isOpen} onClick={toggle}>\r\n\r\n            <Icon onClick={toggle}>\r\n                <CloseIcon />\r\n            </Icon>\r\n\r\n            <SidebarWrapper>\r\n\r\n                <SidebarMenu>\r\n\r\n                    <SidebarLink to=\"/scorecardlist\" activeStyle>\r\n                        Scorecards\r\n                    </SidebarLink>\r\n\r\n                    <SidebarLink to=\"/createscorecard\" activeStyle>\r\n                        Create Scorecard\r\n                    </SidebarLink>\r\n\r\n                    <SidebarLink to=\"/createcourse\" activeStyle>\r\n                        Create Course\r\n                    </SidebarLink>\r\n\r\n                    <SidebarLink to=\"/courselist\" activeStyle>\r\n                        Courses\r\n                    </SidebarLink>\r\n\r\n                    <SidebarLink to=\"/profile\" activeStyle>\r\n                        Profile\r\n                    </SidebarLink>\r\n\r\n                    <SideBtn>\r\n                        <AuthenticationButton/>\r\n                    </SideBtn>\r\n                    \r\n                </SidebarMenu>\r\n\r\n            </SidebarWrapper>\r\n\r\n        </SidebarContainer>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React, {useState, useEffect} from \"react\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport LoginMessage from \"./login-message.component\";\r\nimport axios from 'axios';\r\n\r\nconst Profile = () => {\r\n    const {isAuthenticated, user} = useAuth0();\r\n    const [matched, setMatched] = useState(false);\r\n    const [player, setPlayer] = useState(0);\r\n\r\n    useEffect(() => {\r\n\r\n        //need to find associated user object to be able to display user\r\n        //profile information and statistics\r\n        if (!matched && isAuthenticated) {\r\n            const {nickname} = user;\r\n            //load in user data \r\n            axios.get('https://birdie-tracker.herokuapp.com/users/')\r\n            .then(response => {\r\n                let player_found = false;\r\n                if (response.data.length > 0) {\r\n\r\n                    //search through the users and find the one associated with our logged in user\r\n                    for (let i = 0; i < response.data.length; i++) {\r\n                        if (response.data[i].username == nickname) {\r\n                            console.log(\"Player found in DB\");\r\n                            console.log(response.data[i]._id); //need this to edit the user later on\r\n                            player_found = true;\r\n                            setPlayer(response.data[i]); //save player object to state for later use\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    //if we couldn't find the associated user, create a new user object\r\n                    //this object is associated with the user's authentication credentials\r\n                    //and will be used to store the user's statistics in the DB. \r\n                    if (!player_found) {\r\n                        const user = {\r\n                            username: nickname,\r\n                            rounds_played: 0,\r\n                            best_score: 999,\r\n                            worst_score: -999,\r\n                        }\r\n                        setPlayer(user);\r\n            \r\n                        axios.post('https://birdie-tracker.herokuapp.com/users/add', user)\r\n                        .then(res => console.log(res.data));\r\n                        player_found = true;\r\n                    }\r\n                }\r\n\r\n                //if no users exist, then go ahead and create a new user object\r\n                //this object is associated with the user's authentication credentials\r\n                //and will be used to store the user's statistics in the DB. \r\n                else {\r\n\r\n                    const user = {\r\n                    username: nickname,\r\n                    rounds_played: 0,\r\n                    best_score: 999,\r\n                    worst_score: -999,\r\n                    }\r\n                    setPlayer(user);\r\n        \r\n                    axios.post('https://birdie-tracker.herokuapp.com/users/add', user)\r\n                    .then(res => console.log(res.data));\r\n                    player_found = true;\r\n                }\r\n                setMatched(player_found);\r\n                console.log(matched);\r\n            })\r\n            \r\n        }\r\n\r\n    });\r\n\r\n    const resetStats = (e) => {\r\n        \r\n        e.preventDefault();\r\n\r\n        //can only update user statistics if a user account exists\r\n        if (player != 0) {\r\n\r\n            //reset player stats\r\n            const user = {\r\n              username: player.username,\r\n              rounds_played: 0,\r\n              best_score: 999,\r\n              worst_score: -999,\r\n            }\r\n            console.log(user);\r\n            \r\n            //update the user object in the database\r\n            axios.post('https://birdie-tracker.herokuapp.com/users/update/'+player._id, user)\r\n            .then(res => console.log(res.data))\r\n            .catch((error) => {\r\n              console.log(error);\r\n            })\r\n\r\n            //will need to set matched to false so that the page re-loads the user-object from DB with\r\n            //the updated statistics\r\n            setMatched(false);\r\n          }\r\n    }\r\n\r\n    if (isAuthenticated) {\r\n        const {nickname, email, last_login} = user;\r\n\r\n        const test = matched;\r\n        \r\n        return (\r\n            <div>\r\n                <div className =\"profile_header\">\r\n                    <h2>Personal Information:</h2>\r\n                </div>\r\n\r\n                <div className = \"personal_info\">\r\n                    <h3>Username: {nickname}</h3>\r\n                    <h3>Email: {email}</h3>\r\n                </div>\r\n\r\n                <div className =\"profile_header\">\r\n                    <h2>Stats:</h2>\r\n                </div>\r\n\r\n                <div className = \"statistics\">\r\n                    <h3>Rounds Played: {player.rounds_played}</h3>\r\n                    <h3>Best Score: {player.best_score}</h3>\r\n                    <h3>Worst Score: {player.worst_score}</h3>\r\n\r\n                    <form onSubmit={resetStats}>\r\n                        <div className=\"top_margin\">\r\n                            <input type=\"submit\" value=\"Reset Player Stats\" className=\"btn btn-primary\"/>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <div>\r\n              <LoginMessage/>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Auth0Provider } from \"@auth0/auth0-react\";\r\n\r\nconst Auth0ProviderWithHistory = ({children}) => {\r\n\r\n    const domain = process.env.REACT_APP_AUTH0_DOMAIN; \r\n    const clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\r\n\r\n    const history = useHistory();\r\n\r\n    const onRedirectCallback = (appState) => {\r\n        history.push(appState?.returnTo || window.location.pathname);\r\n    };\r\n\r\n    return (\r\n        <Auth0Provider\r\n          domain={domain}\r\n          clientId={clientId}\r\n          redirectUri={window.location.origin}\r\n          onRedirectCallback={onRedirectCallback}\r\n        >\r\n          {children}\r\n        </Auth0Provider>\r\n      );\r\n\r\n};\r\n\r\nexport default Auth0ProviderWithHistory;","import logo from './logo.svg';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport React, {useState, useEffect} from 'react';\n\nimport ScorecardsList from \"./components/scorecards-list.component\";\nimport EditScorecards from \"./components/edit-scorecards.component\";\nimport CreateScorecard from \"./components/create-scorecard.component\";\nimport CreateUser from \"./components/create-user.component\";\nimport CreateCourse from \"./components/create-course.component\";\nimport CourseList from \"./components/course-list.component\";\nimport EditCourse from \"./components/edit-course.component\";\nimport Homepage from \"./components/homepage-component\";\nimport Navbar2 from './components/Navbar';\nimport Sidebar from './components/Sidebar';\nimport Profile from \"./components/profile.component\";\nimport Auth0ProviderWithHistory from './auth/auth0-provider-with-history';\nimport {useAuth0, withAuthenticationRequired } from \"@auth0/auth0-react\";\nimport ProtectedRoute from \"./auth/protected-route\";\nimport Loading from \"./components/loading-component\";\n\nfunction App() {\n\n  //used to toggle the sidebar display\n  const [isOpen, setIsOpen] = useState(false)\n\n  const toggle = () => {\n    setIsOpen(!isOpen)\n  }\n\n  return (\n    <Router>\n      <Auth0ProviderWithHistory>\n        <div className=\"container\">\n          \n          <Sidebar isOpen={isOpen} toggle={toggle}/>\n          <Navbar2 toggle={toggle}/>\n          <br/>\n          <Route path=\"/\" exact component = {Homepage} />\n          <Route path=\"/scorecardlist\" component = {ScorecardsList} />\n          <Route path=\"/editscorecard/:id\" component = {EditScorecards} />\n          <Route path=\"/createscorecard\" component={CreateScorecard} />\n          <Route path=\"/createcourse\" component={CreateCourse} />\n          <Route path=\"/courselist\" component = {CourseList} />\n          <Route path=\"/editcourse/:id\" component = {EditCourse} />\n          <Route path=\"/profile\" component={Profile} />\n        </div>\n      </Auth0ProviderWithHistory>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}