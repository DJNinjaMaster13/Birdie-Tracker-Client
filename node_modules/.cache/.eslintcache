[{"C:\\Users\\djnin\\Web Dev Projects\\ExerciseTracker\\mern-exercise-tracker\\src\\index.js":"1","C:\\Users\\djnin\\Web Dev Projects\\ExerciseTracker\\mern-exercise-tracker\\src\\reportWebVitals.js":"2","C:\\Users\\djnin\\Web Dev Projects\\ExerciseTracker\\mern-exercise-tracker\\src\\App.js":"3","C:\\Users\\djnin\\Web Dev Projects\\ExerciseTracker\\mern-exercise-tracker\\src\\components\\exercises-list.component.js":"4","C:\\Users\\djnin\\Web Dev Projects\\ExerciseTracker\\mern-exercise-tracker\\src\\components\\create-user.component.js":"5","C:\\Users\\djnin\\Web Dev Projects\\ExerciseTracker\\mern-exercise-tracker\\src\\components\\create-exercise.component.js":"6","C:\\Users\\djnin\\Web Dev Projects\\ExerciseTracker\\mern-exercise-tracker\\src\\components\\navbar.component.js":"7","C:\\Users\\djnin\\Web Dev Projects\\ExerciseTracker\\mern-exercise-tracker\\src\\components\\edit-exercises.component.js":"8","C:\\Users\\djnin\\Web Dev Projects\\DiscGolfTrackScore\\frontend\\src\\index.js":"9","C:\\Users\\djnin\\Web Dev Projects\\DiscGolfTrackScore\\frontend\\src\\App.js":"10","C:\\Users\\djnin\\Web Dev Projects\\DiscGolfTrackScore\\frontend\\src\\reportWebVitals.js":"11","C:\\Users\\djnin\\Web Dev Projects\\DiscGolfTrackScore\\frontend\\src\\components\\create-user.component.js":"12","C:\\Users\\djnin\\Web Dev Projects\\DiscGolfTrackScore\\frontend\\src\\components\\navbar.component.js":"13","C:\\Users\\djnin\\Web Dev Projects\\DiscGolfTrackScore\\frontend\\src\\components\\edit-scorecards.component.js":"14","C:\\Users\\djnin\\Web Dev Projects\\DiscGolfTrackScore\\frontend\\src\\components\\scorecards-list.component.js":"15","C:\\Users\\djnin\\Web Dev Projects\\DiscGolfTrackScore\\frontend\\src\\components\\create-scorecard.component.js":"16","C:\\Users\\djnin\\Web Dev Projects\\DiscGolfTrackScore\\frontend\\src\\components\\create-course.component.js":"17","C:\\Users\\djnin\\Web Dev Projects\\DiscGolfTrackScore\\frontend\\src\\components\\course-list.component.js":"18","C:\\Users\\djnin\\Web Dev Projects\\DiscGolfTrackScore\\frontend\\src\\components\\edit-course.component.js":"19","C:\\Users\\djnin\\Web Dev Projects\\DiscGolfTrackScore\\frontend\\src\\components\\homepage-component.js":"20","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\index.js":"21","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\reportWebVitals.js":"22","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\App.js":"23","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\components\\scorecards-list.component.js":"24","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\components\\navbar.component.js":"25","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\components\\create-scorecard.component.js":"26","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\components\\edit-scorecards.component.js":"27","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\components\\create-user.component.js":"28","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\components\\edit-course.component.js":"29","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\components\\course-list.component.js":"30","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\components\\homepage-component.js":"31","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\components\\create-course.component.js":"32","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\components\\Navbar\\index.js":"33","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\components\\Navbar\\NavBarElements.js":"34","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\components\\Sidebar\\index.js":"35","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\components\\Sidebar\\SidebarElements.js":"36","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\auth\\auth0-provider-with-history.js":"37","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\components\\authentication-button.js":"38","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\components\\login-button.js":"39","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\components\\logout-button.js":"40","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\components\\profile.component.js":"41","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\components\\loading-component.js":"42","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\auth\\protected-route.js":"43","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\components\\login-message.component.js":"44","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\index.js":"45","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\App.js":"46","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\reportWebVitals.js":"47","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\components\\edit-scorecards.component.js":"48","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\components\\create-user.component.js":"49","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\components\\create-scorecard.component.js":"50","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\components\\create-course.component.js":"51","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\components\\scorecards-list.component.js":"52","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\components\\course-list.component.js":"53","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\components\\edit-course.component.js":"54","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\components\\profile.component.js":"55","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\components\\homepage-component.js":"56","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\components\\loading-component.js":"57","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\auth\\auth0-provider-with-history.js":"58","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\auth\\protected-route.js":"59","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\components\\Sidebar\\index.js":"60","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\components\\Navbar\\index.js":"61","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\components\\login-message.component.js":"62","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\components\\authentication-button.js":"63","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\components\\Sidebar\\SidebarElements.js":"64","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\components\\Navbar\\NavBarElements.js":"65","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\components\\login-button.js":"66","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\components\\logout-button.js":"67"},{"size":500,"mtime":499162500000,"results":"68","hashOfConfig":"69"},{"size":362,"mtime":499162500000,"results":"70","hashOfConfig":"69"},{"size":888,"mtime":1629818198611,"results":"71","hashOfConfig":"69"},{"size":2071,"mtime":1629824669943,"results":"72","hashOfConfig":"69"},{"size":1532,"mtime":1629823226450,"results":"73","hashOfConfig":"69"},{"size":4027,"mtime":1629823685815,"results":"74","hashOfConfig":"69"},{"size":837,"mtime":1629817499509,"results":"75","hashOfConfig":"69"},{"size":4460,"mtime":1629825244375,"results":"76","hashOfConfig":"69"},{"size":500,"mtime":499162500000,"results":"77","hashOfConfig":"78"},{"size":1421,"mtime":1630348149089,"results":"79","hashOfConfig":"78"},{"size":362,"mtime":499162500000,"results":"80","hashOfConfig":"78"},{"size":1532,"mtime":1629823226450,"results":"81","hashOfConfig":"78"},{"size":1130,"mtime":1630353165670,"results":"82","hashOfConfig":"78"},{"size":7089,"mtime":1630427114300,"results":"83","hashOfConfig":"78"},{"size":2092,"mtime":1629923034020,"results":"84","hashOfConfig":"78"},{"size":6654,"mtime":1630426466765,"results":"85","hashOfConfig":"78"},{"size":3818,"mtime":1630339252804,"results":"86","hashOfConfig":"78"},{"size":2223,"mtime":1630355711543,"results":"87","hashOfConfig":"78"},{"size":4289,"mtime":1630339277166,"results":"88","hashOfConfig":"78"},{"size":512,"mtime":1630349671490,"results":"89","hashOfConfig":"78"},{"size":501,"mtime":1632614275010,"results":"90","hashOfConfig":"91"},{"size":362,"mtime":499162500000,"results":"92","hashOfConfig":"91"},{"size":2115,"mtime":1634497497529,"results":"93","hashOfConfig":"91"},{"size":3251,"mtime":1634497757276,"results":"94","hashOfConfig":"91"},{"size":1130,"mtime":1630353165670,"results":"95","hashOfConfig":"91"},{"size":9160,"mtime":1637443495161,"results":"96","hashOfConfig":"91"},{"size":9037,"mtime":1637443758735,"results":"97","hashOfConfig":"91"},{"size":1579,"mtime":1630518956804,"results":"98","hashOfConfig":"91"},{"size":5456,"mtime":1636675746288,"results":"99","hashOfConfig":"91"},{"size":2579,"mtime":1634416786456,"results":"100","hashOfConfig":"91"},{"size":769,"mtime":1639352904489,"results":"101","hashOfConfig":"91"},{"size":6041,"mtime":1637443514755,"results":"102","hashOfConfig":"91"},{"size":1547,"mtime":1634412536154,"results":"103","hashOfConfig":"91"},{"size":2020,"mtime":1631205719273,"results":"104","hashOfConfig":"91"},{"size":1567,"mtime":1635015457313,"results":"105","hashOfConfig":"91"},{"size":2022,"mtime":1635015388904,"results":"106","hashOfConfig":"91"},{"size":783,"mtime":1631477868627,"results":"107","hashOfConfig":"91"},{"size":359,"mtime":1631479939453,"results":"108","hashOfConfig":"91"},{"size":377,"mtime":1631478549038,"results":"109","hashOfConfig":"91"},{"size":394,"mtime":1631479651292,"results":"110","hashOfConfig":"91"},{"size":5374,"mtime":1639353052983,"results":"111","hashOfConfig":"91"},{"size":478,"mtime":1635014294055,"results":"112","hashOfConfig":"91"},{"size":440,"mtime":1632964537016,"results":"113","hashOfConfig":"91"},{"size":631,"mtime":1635014656113,"results":"114","hashOfConfig":"91"},{"size":501,"mtime":1632614275010,"results":"115","hashOfConfig":"116"},{"size":2115,"mtime":1634497497529,"results":"117","hashOfConfig":"116"},{"size":362,"mtime":499162500000,"results":"118","hashOfConfig":"116"},{"size":9153,"mtime":1639364351980,"results":"119","hashOfConfig":"116"},{"size":1594,"mtime":1639361418969,"results":"120","hashOfConfig":"116"},{"size":9298,"mtime":1639945157969,"results":"121","hashOfConfig":"116"},{"size":6097,"mtime":1639364386312,"results":"122","hashOfConfig":"116"},{"size":3281,"mtime":1639361532760,"results":"123","hashOfConfig":"116"},{"size":2609,"mtime":1639361345155,"results":"124","hashOfConfig":"116"},{"size":5527,"mtime":1639364395241,"results":"125","hashOfConfig":"116"},{"size":5434,"mtime":1639361515020,"results":"126","hashOfConfig":"116"},{"size":769,"mtime":1639352904489,"results":"127","hashOfConfig":"116"},{"size":478,"mtime":1635014294055,"results":"128","hashOfConfig":"116"},{"size":783,"mtime":1631477868627,"results":"129","hashOfConfig":"116"},{"size":440,"mtime":1632964537016,"results":"130","hashOfConfig":"116"},{"size":1567,"mtime":1635015457313,"results":"131","hashOfConfig":"116"},{"size":1547,"mtime":1634412536154,"results":"132","hashOfConfig":"116"},{"size":631,"mtime":1635014656113,"results":"133","hashOfConfig":"116"},{"size":359,"mtime":1631479939453,"results":"134","hashOfConfig":"116"},{"size":2022,"mtime":1635015388904,"results":"135","hashOfConfig":"116"},{"size":2020,"mtime":1631205719273,"results":"136","hashOfConfig":"116"},{"size":377,"mtime":1631478549038,"results":"137","hashOfConfig":"116"},{"size":394,"mtime":1631479651292,"results":"138","hashOfConfig":"116"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},"1js7s78",{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"141"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},"1hk2kz2",{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"159"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"159"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"159"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"159"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"159"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"159"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"159"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},"ivspii",{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"191"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"191"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"191"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"191"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"191"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"191"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"191"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"191"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"191"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"191"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"191"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vdb4hz",{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249"},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\djnin\\Web Dev Projects\\ExerciseTracker\\mern-exercise-tracker\\src\\index.js",[],["304","305"],"C:\\Users\\djnin\\Web Dev Projects\\ExerciseTracker\\mern-exercise-tracker\\src\\reportWebVitals.js",[],"C:\\Users\\djnin\\Web Dev Projects\\ExerciseTracker\\mern-exercise-tracker\\src\\App.js",["306"],"import logo from './logo.svg';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Navbar from \"./components/navbar.component\";\nimport ExercisesList from \"./components/exercises-list.component\";\nimport EditExercises from \"./components/edit-exercises.component\";\nimport CreateExercise from \"./components/create-exercise.component\";\nimport CreateUser from \"./components/create-user.component\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"container\">\n        <Navbar />\n        <br/>\n        <Route path=\"/\" exact component = {ExercisesList} />\n        <Route path=\"/edit/:id\" component = {EditExercises} />\n        <Route path=\"/create\" component = {CreateExercise} />\n        <Route path=\"/user\" component = {CreateUser} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\djnin\\Web Dev Projects\\ExerciseTracker\\mern-exercise-tracker\\src\\components\\exercises-list.component.js",["307"],"C:\\Users\\djnin\\Web Dev Projects\\ExerciseTracker\\mern-exercise-tracker\\src\\components\\create-user.component.js",[],"C:\\Users\\djnin\\Web Dev Projects\\ExerciseTracker\\mern-exercise-tracker\\src\\components\\create-exercise.component.js",[],"C:\\Users\\djnin\\Web Dev Projects\\ExerciseTracker\\mern-exercise-tracker\\src\\components\\navbar.component.js",[],"C:\\Users\\djnin\\Web Dev Projects\\ExerciseTracker\\mern-exercise-tracker\\src\\components\\edit-exercises.component.js",[],"C:\\Users\\djnin\\Web Dev Projects\\DiscGolfTrackScore\\frontend\\src\\index.js",[],["308","309"],"C:\\Users\\djnin\\Web Dev Projects\\DiscGolfTrackScore\\frontend\\src\\App.js",["310"],"import logo from './logo.svg';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Navbar from \"./components/navbar.component\";\nimport ScorecardsList from \"./components/scorecards-list.component\";\nimport EditScorecards from \"./components/edit-scorecards.component\";\nimport CreateScorecard from \"./components/create-scorecard.component\";\nimport CreateUser from \"./components/create-user.component\";\nimport CreateCourse from \"./components/create-course.component\";\nimport CourseList from \"./components/course-list.component\";\nimport EditCourse from \"./components/edit-course.component\";\nimport Homepage from \"./components/homepage-component\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"container\">\n        <Navbar />\n        <br/>\n        <Route path=\"/\" exact component = {Homepage} />\n        <Route path=\"/scorecardlist\" component = {ScorecardsList} />\n        <Route path=\"/editscorecard/:id\" component = {EditScorecards} />\n        <Route path=\"/createscorecard\" component = {CreateScorecard} />\n        <Route path=\"/createuser\" component = {CreateUser} />\n        <Route path=\"/createcourse\" component = {CreateCourse} />\n        <Route path=\"/courselist\" component = {CourseList} />\n        <Route path=\"/editcourse/:id\" component = {EditCourse} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\djnin\\Web Dev Projects\\DiscGolfTrackScore\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\djnin\\Web Dev Projects\\DiscGolfTrackScore\\frontend\\src\\components\\create-user.component.js",[],"C:\\Users\\djnin\\Web Dev Projects\\DiscGolfTrackScore\\frontend\\src\\components\\navbar.component.js",[],"C:\\Users\\djnin\\Web Dev Projects\\DiscGolfTrackScore\\frontend\\src\\components\\edit-scorecards.component.js",["311"],"C:\\Users\\djnin\\Web Dev Projects\\DiscGolfTrackScore\\frontend\\src\\components\\scorecards-list.component.js",["312"],"import React, { Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n\r\nconst Scorecard = props => (\r\n    <tr>\r\n      <td>{props.scorecard.username}</td>\r\n      <td>{props.scorecard.course}</td>\r\n      <td>{props.scorecard.score}</td>\r\n      <td>{props.scorecard.date.substring(0,10)}</td>\r\n      <td>\r\n        <Link to={\"/editscorecard/\"+props.scorecard._id}>edit</Link> | <a href=\"#\" onClick={() => { props.deleteScorecard(props.scorecard._id) }}>delete</a>\r\n      </td>\r\n    </tr>\r\n)\r\n\r\nexport default class ScorecardList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.deleteScorecard = this.deleteScorecard.bind(this);\r\n\r\n        this.state = {scorecards: [] };\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:5000/scorecards/')\r\n        .then(response => {\r\n            this.setState({ scorecards: response.data})\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    deleteScorecard(id) {\r\n        axios.delete('http://localhost:5000/scorecards/' + id)\r\n        .then(res => console.log(res.data));\r\n\r\n        this.setState({\r\n            scorecards: this.state.scorecards.filter(el => el._id !== id)\r\n        })\r\n    }\r\n\r\n    scorecardList() {\r\n        return this.state.scorecards.map(currentscorecard => {\r\n          return <Scorecard scorecard={currentscorecard} deleteScorecard={this.deleteScorecard} key={currentscorecard._id}/>;\r\n        })\r\n      }\r\n\r\n    render() {\r\n        return (\r\n          <div>\r\n            <h3>Logged Scorecards</h3>\r\n            <table className=\"table\">\r\n              <thead className=\"thead-light\">\r\n                <tr>\r\n                  <th>Username</th>\r\n                  <th>Course</th>\r\n                  <th>Score</th>\r\n                  <th>Date</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                { this.scorecardList() }\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )\r\n      }\r\n}","C:\\Users\\djnin\\Web Dev Projects\\DiscGolfTrackScore\\frontend\\src\\components\\create-scorecard.component.js",["313"],"import React, { Component} from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from 'axios';\r\n\r\nexport default class CreateScorecard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangeCourse = this.onChangeCourse.bind(this);\r\n        this.onChangeScore = this.onChangeScore.bind(this);\r\n        this.onChangeDate = this.onChangeDate.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.updateScores = this.updateScores.bind(this);\r\n        this.onChangeScores = this.onChangeScores.bind(this);\r\n\r\n        this.state = {\r\n            username: '',\r\n            course: '',\r\n            score: 0,\r\n            numHoles: 0,\r\n            scores: [],\r\n            date: new Date(),\r\n            users: [],\r\n            courses: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:5000/users/')\r\n        .then(response => {\r\n          if (response.data.length > 0) {\r\n            this.setState({\r\n              users: response.data.map(user => user.username),\r\n              username: response.data[0].username\r\n            })\r\n          }\r\n        })\r\n        axios.get('http://localhost:5000/courses/')\r\n        .then(response => {\r\n          if (response.data.length > 0) {\r\n            this.setState({\r\n              courses: response.data,\r\n              course: response.data[0].name,\r\n              numHoles: response.data[0].holes.length\r\n            })\r\n          }\r\n        })\r\n    }\r\n\r\n    onChangeUsername(e) {\r\n        this.setState({\r\n            username: e.target.value\r\n        })\r\n    }\r\n\r\n    //loops through the courses array to find the one the user selected\r\n    //then updates the state with the corresponding values for numHoles\r\n    //as well as copying the holes array into the scores array\r\n    //so that the form elements for the individual scores can be rendered\r\n    //NOTE: numHoles doesn't really need to be updated, just used for testing purposes\r\n    updateScores() {\r\n      //set the number of holes based on which course is selected\r\n      for (let i = 0; i < this.state.courses.length; i++) {\r\n        if (this.state.courses[i].name == this.state.course) {\r\n          this.setState(state=> ({...state, numHoles: this.state.courses[i].holes.length, scores: this.state.courses[i].holes}), () => {\r\n            console.log('just changed numHoles to: ' + this.state.numHoles);\r\n            console.log('scores: ' + this.state.scores)\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    onChangeScores = idx => e => {\r\n      const newScores = this.state.scores.map((score, sidx) => {\r\n          if (idx !== sidx) return score;\r\n          return {...score, par: e.target.value };\r\n      });\r\n\r\n      this.setState({scores: newScores});\r\n  }\r\n\r\n    onChangeCourse(e) {\r\n        this.setState(state => ({...state, course: e.target.value}), () => {\r\n          console.log(this.state.course);\r\n          this.updateScores();\r\n        })\r\n    }\r\n\r\n    onChangeScore(e) {\r\n        this.setState({\r\n            score: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeDate(date) {\r\n        this.setState({\r\n            date: date\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const scorecard = {\r\n            username: this.state.username,\r\n            course: this.state.course,\r\n            score: this.state.score,\r\n            date: this.state.date,\r\n            scores: this.state.scores\r\n        }\r\n\r\n        console.log(scorecard);\r\n\r\n        axios.post('http://localhost:5000/scorecards/add', scorecard)\r\n        .then(res => console.log(res.data));\r\n\r\n        window.location = '/scorecardlist';\r\n    }\r\n\r\n    render() {\r\n      \r\n      const numHoles = this.state.numHoles;\r\n\r\n        return (\r\n        <div>\r\n          <h3>Create New Scorecard</h3>\r\n          <form onSubmit={this.onSubmit}>\r\n            <div className=\"form-group\"> \r\n              <label>Username: </label>\r\n              <select ref=\"userInput\"\r\n                  required\r\n                  className=\"form-control\"\r\n                  value={this.state.username}\r\n                  onChange={this.onChangeUsername}>\r\n                  {\r\n                    this.state.users.map(function(user) {\r\n                      return <option \r\n                        key={user}\r\n                        value={user}>{user}\r\n                        </option>;\r\n                    })\r\n                  }\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\"> \r\n              <label>Course: </label>\r\n              <select ref=\"userInput\"\r\n                  required\r\n                  className=\"form-control\"\r\n                  value={this.state.course}\r\n                  onChange={this.onChangeCourse}>\r\n                  {\r\n                    this.state.courses.map(function(course) {\r\n                      return <option \r\n                        key={course.name}\r\n                        value={course.name}>{course.name}\r\n                        </option>;\r\n                    })\r\n                  }\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Score: </label>\r\n              <input \r\n                  type=\"text\" \r\n                  className=\"form-control\"\r\n                  value={this.state.score}\r\n                  onChange={this.onChangeScore}\r\n                  />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Date: </label>\r\n              <div>\r\n                <DatePicker\r\n                  selected={this.state.date}\r\n                  onChange={this.onChangeDate}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {this.state.scores.map((score, idx) => (\r\n                <div className=\"score\" key={score._id}>\r\n                  <label>Hole {idx + 1} score: </label>\r\n                    <div>\r\n                      <input\r\n                          type=\"number\"\r\n                          value={score.par}\r\n                          onChange={this.onChangeScores(idx)}\r\n                      />\r\n                    </div>\r\n                </div>\r\n            ))}\r\n    \r\n            <div className=\"form-group\">\r\n              <input type=\"submit\" value=\"Create Scorecard\" className=\"btn btn-primary\" />\r\n            </div>\r\n          </form>\r\n\r\n          <div>\r\n            <p>Number of holes for current course: {numHoles}</p>\r\n          </div>\r\n\r\n        </div>\r\n        )\r\n      }\r\n}","C:\\Users\\djnin\\Web Dev Projects\\DiscGolfTrackScore\\frontend\\src\\components\\create-course.component.js",["314"],"import React, { Component} from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from 'axios';\r\n\r\nexport default class CreateCourse extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeName = this.onChangeName.bind(this);\r\n        this.onChangeLocation = this.onChangeLocation.bind(this);\r\n        this.onChangeHoles = this.onChangeHoles.bind(this);\r\n        this.onAddHole = this.onAddHole.bind(this);\r\n        this.onRemoveHole = this.onRemoveHole.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            name: '',\r\n            location: '',\r\n            holes: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    onChangeName(e) {\r\n        this.setState({\r\n            name: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeLocation(e) {\r\n        this.setState({\r\n            location: e.target.value\r\n        })\r\n    }\r\n\r\n    onAddHole = () => {\r\n        this.setState({\r\n            holes: this.state.holes.concat([{par: 3}])\r\n        })\r\n    }\r\n\r\n    onRemoveHole = idx => () => {\r\n        this.setState({\r\n            holes: this.state.holes.filter((s, sidx) => idx !== sidx)\r\n        })\r\n    }\r\n\r\n    onChangeHoles = idx => e => {\r\n        const newHoles = this.state.holes.map((hole, sidx) => {\r\n            if (idx !== sidx) return hole;\r\n            return {...hole, par: e.target.value };\r\n        });\r\n\r\n        this.setState({holes: newHoles});\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const course = {\r\n            name: this.state.name,\r\n            location: this.state.location,\r\n            holes: this.state.holes            \r\n        }\r\n\r\n        console.log(course);\r\n\r\n        axios.post('http://localhost:5000/courses/add', course)\r\n        .then(res => console.log(res.data));\r\n\r\n        window.location = '/courselist';\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n          <h3>Create New Course</h3>\r\n          <form onSubmit={this.onSubmit}>\r\n            <div className=\"form-group\"> \r\n                <label>Name: </label>\r\n                <input  type=\"text\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={this.state.name}\r\n                    onChange={this.onChangeName}\r\n                    />\r\n                </div>\r\n            <div>\r\n                \r\n            </div>\r\n            <div className=\"form-group\"> \r\n              <label>Location: </label>\r\n              <input  type=\"text\"\r\n                  required\r\n                  className=\"form-control\"\r\n                  value={this.state.location}\r\n                  onChange={this.onChangeLocation}\r\n                  />\r\n            </div>\r\n\r\n            {this.state.holes.map((hole, idx) => (\r\n                <div className=\"hole\" key={hole._id}>\r\n                    <input\r\n                        type=\"number\"\r\n                        value={hole.par}\r\n                        onChange={this.onChangeHoles(idx)}\r\n                    />\r\n                    <button\r\n                        type = \"button\"\r\n                        onClick={this.onRemoveHole(idx)}\r\n                        className=\"small\"\r\n                    >\r\n                        -\r\n                    </button>\r\n                </div>\r\n            ))}\r\n            <button\r\n                type=\"button\"\r\n                onClick={this.onAddHole}\r\n                className=\"small\"\r\n            >\r\n                Add Hole\r\n            </button>\r\n\r\n            <div className=\"form-group\">\r\n              <input type=\"submit\" value=\"Create Course\" className=\"btn btn-primary\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n        )\r\n      }\r\n}","C:\\Users\\djnin\\Web Dev Projects\\DiscGolfTrackScore\\frontend\\src\\components\\course-list.component.js",["315"],"import React, { Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nvar test_holes = [\r\n    {par: 'one'},\r\n    {par: 'two'},\r\n    {par: 'three'}\r\n];\r\n\r\nconst Course = props => (\r\n    <tr>\r\n      <td>{props.course.name}</td>\r\n      <td>{props.course.location}</td>\r\n      <td>{props.course.holes.length}</td>\r\n      <td>\r\n        <Link to={\"/editcourse/\"+props.course._id}>edit</Link> | <a href=\"#\" onClick={() => { props.deleteCourse(props.course._id) }}>delete</a>\r\n      </td>\r\n    </tr>\r\n)\r\n\r\nconst Test = ({holes}) => (\r\n  <> \r\n    {holes.map(hole => (\r\n      <div className=\"hole\" key={hole._id}>{hole.par}</div>\r\n    ))}\r\n  </>\r\n)\r\n\r\nexport default class CourseList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.deleteCourse = this.deleteCourse.bind(this);\r\n\r\n        this.state = {courses: [] };\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:5000/courses/')\r\n        .then(response => {\r\n            this.setState({ courses: response.data})\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    deleteCourse(id) {\r\n        axios.delete('http://localhost:5000/courses/' + id)\r\n        .then(res => console.log(res.data));\r\n\r\n        this.setState({\r\n            courses: this.state.courses.filter(el => el._id !== id)\r\n        })\r\n    }\r\n\r\n    courseList() {\r\n        return this.state.courses.map(currentcourse => {\r\n          return <Course course={currentcourse} deleteCourse={this.deleteCourse} key={currentcourse._id}/>;\r\n        })\r\n      }\r\n\r\n    render() {\r\n        return (\r\n          <div>\r\n            <h3 >Course List</h3>\r\n            <table className=\"table\">\r\n              <thead className=\"thead-light\">\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <th>Location</th>\r\n                  <th>Holes</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                { this.courseList() }\r\n              </tbody>\r\n            </table>\r\n            <div>\r\n            <Test holes={test_holes}/>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n}","C:\\Users\\djnin\\Web Dev Projects\\DiscGolfTrackScore\\frontend\\src\\components\\edit-course.component.js",["316"],"import React, { Component} from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from 'axios';\r\n\r\nexport default class EditCourse extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeName = this.onChangeName.bind(this);\r\n        this.onChangeLocation = this.onChangeLocation.bind(this);\r\n        this.onChangeHoles = this.onChangeHoles.bind(this);\r\n        this.onAddHole = this.onAddHole.bind(this);\r\n        this.onRemoveHole = this.onRemoveHole.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            name: '',\r\n            location: '',\r\n            holes: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        axios.get('http://localhost:5000/courses/'+this.props.match.params.id)\r\n        .then(response => {\r\n            this.setState({\r\n                name: response.data.name,\r\n                location: response.data.location,\r\n                holes: response.data.holes\r\n            })\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    onChangeName(e) {\r\n        this.setState({\r\n            name: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeLocation(e) {\r\n        this.setState({\r\n            location: e.target.value\r\n        })\r\n    }\r\n\r\n    onAddHole = () => {\r\n        this.setState({\r\n            holes: this.state.holes.concat([{par: 3}])\r\n        })\r\n    }\r\n\r\n    onRemoveHole = idx => () => {\r\n        this.setState({\r\n            holes: this.state.holes.filter((s, sidx) => idx !== sidx)\r\n        })\r\n    }\r\n\r\n    onChangeHoles = idx => e => {\r\n        const newHoles = this.state.holes.map((hole, sidx) => {\r\n            if (idx !== sidx) return hole;\r\n            return {...hole, par: e.target.value };\r\n        });\r\n\r\n        this.setState({holes: newHoles});\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const course = {\r\n            name: this.state.name,\r\n            location: this.state.location,\r\n            holes: this.state.holes \r\n        }\r\n\r\n        console.log(course);\r\n\r\n        axios.post('http://localhost:5000/courses/update/'+this.props.match.params.id, course)\r\n        .then(res => console.log(res.data))\r\n        .catch((error) => {\r\n          console.log(error);\r\n        })\r\n\r\n        window.location = '/courselist';\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n          <h3>Change Courses</h3>\r\n          <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\"> \r\n                <label>Name: </label>\r\n                <input  type=\"text\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={this.state.name}\r\n                    onChange={this.onChangeName}\r\n                    />\r\n                </div>\r\n            <div>\r\n                \r\n            </div>\r\n            <div className=\"form-group\"> \r\n              <label>Location: </label>\r\n              <input  type=\"text\"\r\n                  required\r\n                  className=\"form-control\"\r\n                  value={this.state.location}\r\n                  onChange={this.onChangeLocation}\r\n                  />\r\n            </div>\r\n\r\n            {this.state.holes.map((hole, idx) => (\r\n                <div className=\"hole\" key={hole._id}>\r\n                    <input\r\n                        type=\"number\"\r\n                        value={hole.par}\r\n                        onChange={this.onChangeHoles(idx)}\r\n                    />\r\n                    <button\r\n                        type = \"button\"\r\n                        onClick={this.onRemoveHole(idx)}\r\n                        className=\"small\"\r\n                    >\r\n                        -\r\n                    </button>\r\n                </div>\r\n            ))}\r\n            <button\r\n                type=\"button\"\r\n                onClick={this.onAddHole}\r\n                className=\"small\"\r\n            >\r\n                Add Hole\r\n            </button>\r\n    \r\n            <div className=\"form-group\">\r\n              <input type=\"submit\" value=\"Submit Changes\" className=\"btn btn-primary\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n        )\r\n      }\r\n}","C:\\Users\\djnin\\Web Dev Projects\\DiscGolfTrackScore\\frontend\\src\\components\\homepage-component.js",["317","318"],"import React, { Component} from 'react';\r\nimport axios from 'axios';\r\nimport logo from '../Images/dgbasket.jpg';\r\n\r\nexport default class Homepage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div>\r\n            <h3 class=\"header_centered\">Welcome to BirdieTracker!</h3>\r\n            \r\n            <img src={logo} width=\"600\" height=\"600\" class=\"center\"/> \r\n          </div>\r\n        )\r\n      }\r\n}","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\index.js",[],["319","320"],"C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\App.js",["321","322","323","324","325","326","327"],"import logo from './logo.svg';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport React, {useState, useEffect} from 'react';\n\nimport ScorecardsList from \"./components/scorecards-list.component\";\nimport EditScorecards from \"./components/edit-scorecards.component\";\nimport CreateScorecard from \"./components/create-scorecard.component\";\nimport CreateUser from \"./components/create-user.component\";\nimport CreateCourse from \"./components/create-course.component\";\nimport CourseList from \"./components/course-list.component\";\nimport EditCourse from \"./components/edit-course.component\";\nimport Homepage from \"./components/homepage-component\";\nimport Navbar2 from './components/Navbar';\nimport Sidebar from './components/Sidebar';\nimport Profile from \"./components/profile.component\";\nimport Auth0ProviderWithHistory from './auth/auth0-provider-with-history';\nimport {useAuth0, withAuthenticationRequired } from \"@auth0/auth0-react\";\nimport ProtectedRoute from \"./auth/protected-route\";\nimport Loading from \"./components/loading-component\";\n\nfunction App() {\n\n  //used to toggle the sidebar display\n  const [isOpen, setIsOpen] = useState(false)\n\n  const toggle = () => {\n    setIsOpen(!isOpen)\n  }\n\n  return (\n    <Router>\n      <Auth0ProviderWithHistory>\n        <div className=\"container\">\n          \n          <Sidebar isOpen={isOpen} toggle={toggle}/>\n          <Navbar2 toggle={toggle}/>\n          <br/>\n          <Route path=\"/\" exact component = {Homepage} />\n          <Route path=\"/scorecardlist\" component = {ScorecardsList} />\n          <Route path=\"/editscorecard/:id\" component = {EditScorecards} />\n          <Route path=\"/createscorecard\" component={CreateScorecard} />\n          <Route path=\"/createcourse\" component={CreateCourse} />\n          <Route path=\"/courselist\" component = {CourseList} />\n          <Route path=\"/editcourse/:id\" component = {EditCourse} />\n          <Route path=\"/profile\" component={Profile} />\n        </div>\n      </Auth0ProviderWithHistory>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\components\\scorecards-list.component.js",["328","329","330"],"import React, { Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { withAuth0 } from '@auth0/auth0-react';\r\nimport LoginMessage from \"./login-message.component\";\r\nimport Loading from \"./loading-component\";\r\n\r\n//creates a JSX element from the given scorecard properties\r\n//referenced in the scorecardList() function\r\nconst Scorecard = props => (\r\n    <tr>\r\n      <td>{props.scorecard.username}</td>\r\n      <td>{props.scorecard.course}</td>\r\n      <td>{props.scorecard.score} / {props.scorecard.par}</td>\r\n      <td>{props.scorecard.date.substring(0,10)}</td>\r\n      <td>\r\n        <Link to={\"/editscorecard/\"+props.scorecard._id}>edit</Link> | <a href=\"#\" onClick={() => { props.deleteScorecard(props.scorecard._id) }}>delete</a>\r\n      </td>\r\n    </tr>\r\n)\r\n\r\nclass ScorecardList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n       \r\n        this.state = {scorecards: []};\r\n        this.deleteScorecard = this.deleteScorecard.bind(this);\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        //get the scorecard data from the server\r\n        axios.get('http://localhost:5000/scorecards/')\r\n        .then(response => {\r\n            this.setState({ scorecards: response.data})\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    //sends a delete request to the server and then filters\r\n    //the array to remove the deleted scorecard\r\n    deleteScorecard(id) {\r\n        axios.delete('http://localhost:5000/scorecards/' + id)\r\n        .then(res => console.log(res.data));\r\n\r\n        this.setState({\r\n            scorecards: this.state.scorecards.filter(el => el._id !== id)\r\n        })\r\n    }\r\n\r\n    //maps each scorecard into a JSX element to be rendered\r\n   \r\n    scorecardList() {\r\n\r\n      const { isAuthenticated, user } = this.props.auth0;\r\n      const {nickname} = user;\r\n\r\n      if (isAuthenticated) {\r\n        return this.state.scorecards.map(currentscorecard => {\r\n          //only shows the scorecards for the logged in user.\r\n          if (currentscorecard.username == nickname) {\r\n            return <Scorecard scorecard={currentscorecard} deleteScorecard={this.deleteScorecard} key={currentscorecard._id}/>;\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    render() {\r\n\r\n      const { isLoading, isAuthenticated } = this.props.auth0;\r\n\r\n      if (isLoading) {\r\n        return <Loading />;\r\n      }\r\n\r\n      if (!isAuthenticated) { \r\n        return (\r\n            <div>\r\n              <LoginMessage/>\r\n            </div>\r\n        )\r\n      }\r\n      \r\n      return (\r\n\r\n        <div className=\"white_background\">\r\n          <h3>Logged Scorecards</h3>\r\n          <table className=\"table\">\r\n            <thead className=\"thead-light\">\r\n              <tr>\r\n                <th>Username</th>\r\n                <th>Course</th>\r\n                <th>Score</th>\r\n                <th>Date</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              { this.scorecardList() }\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )\r\n      }\r\n}\r\n\r\n//export withAuth0 to allow use of user's username for the scorecard\r\nexport default withAuth0(ScorecardList);","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\components\\navbar.component.js",[],["331","332"],"C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\components\\create-scorecard.component.js",["333","334","335","336"],"import React, { Component} from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from 'axios';\r\nimport { withAuth0 } from '@auth0/auth0-react';\r\nimport LoginMessage from \"./login-message.component\";\r\n\r\nclass CreateScorecard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeCourse = this.onChangeCourse.bind(this);\r\n        this.onChangeDate = this.onChangeDate.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.updateScores = this.updateScores.bind(this);\r\n        this.onChangeScores = this.onChangeScores.bind(this);\r\n\r\n        const {isAuthenticated } = this.props.auth0;\r\n\r\n        if (isAuthenticated) {\r\n          const { user } = this.props.auth0;\r\n          const {nickname, email} = user;\r\n          this.state = {\r\n            username: nickname,\r\n            course: '',\r\n            score: 0,\r\n            par: 0,\r\n            scores: [],\r\n            date: new Date(),\r\n            users: [],\r\n            courses: [],\r\n            isAuth: isAuthenticated,\r\n            userAccount: null,\r\n          }\r\n        }\r\n\r\n        else {\r\n          this.state = {\r\n            username: '',\r\n            course: '',\r\n            score: 0,\r\n            par: 0,\r\n            scores: [],\r\n            date: new Date(),\r\n            users: [],\r\n            courses: [],\r\n            isAuth: false,\r\n            userAccount: null,\r\n        }\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n      //user must be logged in or else we will be adding blank user objects\r\n      if (this.state.isAuth) {\r\n\r\n        //load in user data \r\n        axios.get('http://localhost:5000/users/')\r\n        .then(response => {\r\n          if (response.data.length > 0) {\r\n\r\n            let matched = false;\r\n            //search through the users and find the one associated with our logged in user\r\n            for (let i = 0; i < response.data.length; i++) {\r\n              if (response.data[i].username == this.state.username) {\r\n                  console.log(\"Match found\");\r\n\r\n                  //once correct user is found, save their info in the state to be used later\r\n                  //when updating the user object. \r\n                  this.setState(state => ({\r\n                    ...state,\r\n                    userAccount: response.data[i],\r\n                  }))\r\n                  matched = true;\r\n                  break;\r\n              }\r\n            }\r\n          }\r\n        })\r\n\r\n        //load in course data for dropdown select\r\n        axios.get('http://localhost:5000/courses/')\r\n        .then(response => {\r\n          if (response.data.length > 0) {\r\n            this.setState(state => ({...state,\r\n              courses: response.data,\r\n              course: response.data[0].name,\r\n              scores: response.data[0].holes,\r\n              holes: response.data[0].holes,\r\n              par: response.data[0].par,\r\n            }), () => {\r\n              //callback function to ensure state is updated before elements are rendered\r\n            })\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    //loops through the courses array to find the one the user selected\r\n    //then updates the state with the corresponding values for scores and par\r\n    //so that the form elements for the individual scores can be rendered\r\n    updateScores() {\r\n      //set the number of holes based on which course is selected\r\n      for (let i = 0; i < this.state.courses.length; i++) {\r\n        if (this.state.courses[i].name == this.state.course) {\r\n          this.setState(state=> ({...state, \r\n            scores: this.state.courses[i].holes,\r\n            par: this.state.courses[i].par}), () => {\r\n            //callback function to ensure state is updated before elements are rendered\r\n\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    //triggered by the user changing the score for an individual hole\r\n    onChangeScores = idx => e => {\r\n      const newScores = this.state.scores.map((score, sidx) => {\r\n          if (idx !== sidx) return score;\r\n          return {...score, par: e.target.value };\r\n      });\r\n\r\n      this.setState(state => ({...state, scores: newScores}), () => {\r\n        //callback function to ensure state is updated before elements are rendered\r\n      });\r\n  }\r\n\r\n    //triggered by the user changing the course\r\n    //calls updateScores() function to re-render the holes for the newly selected course\r\n    onChangeCourse(e) {\r\n        this.setState(state => ({...state, course: e.target.value}), () => {\r\n          this.updateScores();\r\n        })\r\n    }\r\n\r\n    //triggered by the user changing the date in the select field\r\n    onChangeDate(date) {\r\n        this.setState({\r\n            date: date\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        //calculate the total score based on the individual holes\r\n        let round_score = 0;\r\n        for (let i = 0; i < this.state.scores.length; i++) {\r\n          round_score = round_score + parseInt(this.state.scores[i].par);\r\n        }\r\n\r\n        //set the score in the state and wait to post the new\r\n        //scorecard until the state is updated by using\r\n        //callback function\r\n        this.setState(state => ({...state, score: round_score}), () => {\r\n\r\n          const scorecard = {\r\n            username: this.state.username,\r\n            course: this.state.course,\r\n            score: this.state.score,\r\n            date: this.state.date,\r\n            scores: this.state.scores,\r\n            par: this.state.par\r\n          }\r\n\r\n          axios.post('http://localhost:5000/scorecards/add', scorecard)\r\n          .then(res => console.log(res.data));\r\n\r\n        })\r\n\r\n        //can only update user statistics if a user account exists\r\n        if (this.state.userAccount != null) {\r\n\r\n          let new_best = this.state.userAccount.best_score;\r\n          let new_worst = this.state.userAccount.worst_score;\r\n          let score = round_score - this.state.par;\r\n          if ( score < this.state.userAccount.best_score) {\r\n            new_best = score;\r\n          }\r\n          if ( score > this.state.userAccount.worst_score) {\r\n            new_worst = score;\r\n          }\r\n          \r\n\r\n          const user = {\r\n            username: this.state.userAccount.username,\r\n            //update the user object by adding one to the number of rounds played\r\n            rounds_played: this.state.userAccount.rounds_played + 1,\r\n            best_score: new_best,\r\n            worst_score: new_worst,\r\n          }\r\n  \r\n          console.log(user);\r\n          \r\n          //update the user object in the database\r\n          axios.post('http://localhost:5000/users/update/'+this.state.userAccount._id, user)\r\n          .then(res => console.log(res.data))\r\n          .catch((error) => {\r\n            console.log(error);\r\n          })\r\n\r\n        }\r\n\r\n        window.location = '/scorecardlist';\r\n    }\r\n\r\n    render() {\r\n\r\n      if (!this.state.isAuth) { \r\n        return (\r\n            <div>\r\n              <LoginMessage/>\r\n            </div>\r\n        )\r\n      }\r\n\r\n        return (\r\n        <div className = \"scorecard_elements\">\r\n\r\n          <div className =\"profile_header\">\r\n            <h3>Create Scorecard</h3>\r\n          </div>\r\n\r\n          <form onSubmit={this.onSubmit}>\r\n\r\n            <div className=\"form-group\"> \r\n              <label>Course: </label>\r\n              <select ref=\"userInput\"\r\n                  required\r\n                  className=\"form-control\"\r\n                  value={this.state.course}\r\n                  onChange={this.onChangeCourse}>\r\n                  {\r\n                    this.state.courses.map(function(course) {\r\n                      return <option \r\n                        key={course.name}\r\n                        value={course.name}>{course.name}\r\n                        </option>;\r\n                    })\r\n                  }\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Date: </label>\r\n              <div>\r\n                <DatePicker\r\n                  selected={this.state.date}\r\n                  onChange={this.onChangeDate}\r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"score_boxes\">\r\n              {this.state.scores.map((score, idx) => (\r\n                  <div className=\"score\" key={score._id}>\r\n                    <label>Hole {idx + 1} score: </label>\r\n                      <div>\r\n                        <input\r\n                            type=\"number\"\r\n                            value={score.par}\r\n                            onChange={this.onChangeScores(idx)}\r\n                        />\r\n                      </div>\r\n                  </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input type=\"submit\" value=\"Create Scorecard\" className=\"btn btn-primary\" />\r\n            </div>\r\n          </form>\r\n\r\n        </div>\r\n        )\r\n      }\r\n}\r\n\r\n//export withAuth0 to allow use of user's username for the scorecard\r\nexport default withAuth0(CreateScorecard);","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\components\\edit-scorecards.component.js",["337","338","339"],"import React, { Component} from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from 'axios';\r\nimport { withAuth0 } from '@auth0/auth0-react';\r\n\r\nclass EditScorecard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeCourse = this.onChangeCourse.bind(this);\r\n        this.onChangeDate = this.onChangeDate.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.updateScores = this.updateScores.bind(this);\r\n        this.onChangeScores = this.onChangeScores.bind(this);\r\n\r\n        const {isAuthenticated } = this.props.auth0;\r\n\r\n        this.state = {\r\n          username: '',\r\n          course: '',\r\n          score: 0,\r\n          par: 0,\r\n          scores: [],\r\n          date: new Date(),\r\n          users: [],\r\n          courses: [],\r\n          isAuth: isAuthenticated,\r\n          userAccount: null,\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n\r\n      //user must be logged in or else we will be adding blank user objects\r\n      if (this.state.isAuth) {\r\n\r\n        //load in user data \r\n        axios.get('http://localhost:5000/users/')\r\n        .then(response => {\r\n          if (response.data.length > 0) {\r\n\r\n            let matched = false;\r\n            //search through the users and find the one associated with our logged in user\r\n            for (let i = 0; i < response.data.length; i++) {\r\n              if (response.data[i].username == this.state.username) {\r\n                  console.log(\"Match found\");\r\n\r\n                  //once correct user is found, save their info in the state to be used later\r\n                  //when updating the user object. \r\n                  this.setState(state => ({\r\n                    ...state,\r\n                    userAccount: response.data[i],\r\n                  }))\r\n                  matched = true;\r\n                  break;\r\n              }\r\n            }\r\n          }\r\n        })\r\n\r\n       //load in scorecard data from selected scorecard\r\n        axios.get('http://localhost:5000/scorecards/'+this.props.match.params.id)\r\n        .then(response => {\r\n            this.setState({\r\n                username: response.data.username,\r\n                course: response.data.course,\r\n                score: response.data.score,\r\n                scores: response.data.scores,\r\n                date: new Date(response.data.date),\r\n                par: response.data.par,\r\n            })\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n\r\n        //load in course data for dropdown select\r\n        axios.get('http://localhost:5000/courses/')\r\n        .then(response => {\r\n          if (response.data.length > 0) {\r\n            this.setState(state => ({...state,\r\n              courses: response.data,\r\n            }), () => {\r\n              //callback function to ensure state is updated before elements are rendered\r\n            })\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n\r\n    //loops through the courses array to find the one the user selected\r\n    //then updates the state with the corresponding values for scores and par\r\n    //so that the form elements for the individual scores can be rendered\r\n    updateScores() {\r\n      //set the number of holes based on which course is selected\r\n      for (let i = 0; i < this.state.courses.length; i++) {\r\n        if (this.state.courses[i].name == this.state.course) {\r\n          this.setState(state=> ({...state, \r\n            scores: this.state.courses[i].holes,\r\n            par: this.state.courses[i].par}), () => {\r\n            //callback function to ensure state is updated before elements are rendered\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    //triggered by the user changing the score for an individual hole\r\n    onChangeScores = idx => e => {\r\n      const newScores = this.state.scores.map((score, sidx) => {\r\n          if (idx !== sidx) return score;\r\n          return {...score, par: e.target.value };\r\n      });\r\n\r\n      this.setState(state => ({...state, scores: newScores}), () => {\r\n        //callback function to ensure state is updated before elements are rendered\r\n      });\r\n  }\r\n\r\n    //triggered by the user changing the course in the select field\r\n    //calls updateScores() method to re-render the holes for the newly selected course\r\n    onChangeCourse(e) {\r\n      this.setState(state => ({...state, course: e.target.value}), () => {\r\n        this.updateScores();\r\n      })\r\n  }\r\n\r\n    //triggered by the user changing the date value in the select field\r\n    onChangeDate(date) {\r\n        this.setState({\r\n            date: date\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        //calculate the total score based on the individual holes\r\n        let round_score = 0;\r\n        for (let i = 0; i < this.state.scores.length; i++) {\r\n          round_score = round_score + parseInt(this.state.scores[i].par);\r\n        }\r\n\r\n        //set the score in the stat and wait to post the new\r\n        //scorecard until the state is updated by using\r\n        //callback function\r\n        this.setState(state => ({...state, score: round_score}), () => {\r\n        \r\n          const scorecard = {\r\n            username: this.state.username,\r\n            course: this.state.course,\r\n            score: this.state.score,\r\n            date: this.state.date,\r\n            scores: this.state.scores,\r\n            par: this.state.par\r\n          }\r\n\r\n          //save the updated scorecard to the database\r\n          axios.post('http://localhost:5000/scorecards/update/'+this.props.match.params.id, scorecard)\r\n          .then(res => console.log(res.data))\r\n          .catch((error) => {\r\n            console.log(error);\r\n          })\r\n        \r\n        })\r\n\r\n        //can only update user statistics if a user account exists\r\n        if (this.state.userAccount != null) {\r\n\r\n          let new_best = this.state.userAccount.best_score;\r\n          let new_worst = this.state.userAccount.worst_score;\r\n          let score = round_score - this.state.par;\r\n          if ( score < this.state.userAccount.best_score) {\r\n            new_best = score;\r\n          }\r\n          if ( score > this.state.userAccount.worst_score) {\r\n            new_worst = score;\r\n          }\r\n          \r\n\r\n          const user = {\r\n            username: this.state.userAccount.username,\r\n            rounds_played: this.state.userAccount.rounds_played,\r\n            best_score: new_best,\r\n            worst_score: new_worst,\r\n          }\r\n  \r\n          console.log(user);\r\n          \r\n          //update the user object in the database\r\n          axios.post('http://localhost:5000/users/update/'+this.state.userAccount._id, user)\r\n          .then(res => console.log(res.data))\r\n          .catch((error) => {\r\n            console.log(error);\r\n          })\r\n\r\n        }\r\n\r\n        //redirect the user back to the scorecard list page\r\n        window.location = '/scorecardlist';\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div className = \"scorecard_elements\">\r\n\r\n          <div className =\"profile_header\">\r\n              <h3>Edit Scorecard</h3>\r\n          </div>\r\n\r\n          <form onSubmit={this.onSubmit}>\r\n\r\n            <div className=\"form-group\"> \r\n              <label>Course: </label>\r\n              <select ref=\"userInput\"\r\n                  required\r\n                  className=\"form-control\"\r\n                  value={this.state.course}\r\n                  onChange={this.onChangeCourse}>\r\n                  {\r\n                    this.state.courses.map(function(course) {\r\n                      return <option \r\n                        key={course.name}\r\n                        value={course.name}>{course.name}\r\n                        </option>;\r\n                    })\r\n                  }\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Date: </label>\r\n              <div>\r\n                <DatePicker\r\n                  selected={this.state.date}\r\n                  onChange={this.onChangeDate}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"score_boxes\">\r\n              {this.state.scores.map((score, idx) => (\r\n                  <div className=\"score\" key={score._id}>\r\n                    <label>Hole {idx + 1} score: </label>\r\n                      <div>\r\n                        <input\r\n                            type=\"number\"\r\n                            value={score.par}\r\n                            onChange={this.onChangeScores(idx)}\r\n                        />\r\n                      </div>\r\n                  </div>\r\n              ))}\r\n            </div>\r\n    \r\n            <div className=\"form-group\">\r\n              <input type=\"submit\" value=\"Submit Changes\" className=\"btn btn-primary\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n        )\r\n      }\r\n}\r\n\r\n//export withAuth0 to allow use of user's username for the scorecard\r\nexport default withAuth0(EditScorecard);","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\components\\create-user.component.js",[],"C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\components\\edit-course.component.js",["340"],"import React, { Component} from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from 'axios';\r\n\r\nexport default class EditCourse extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeName = this.onChangeName.bind(this);\r\n        this.onChangeLocation = this.onChangeLocation.bind(this);\r\n        this.onChangeHoles = this.onChangeHoles.bind(this);\r\n        this.onAddHole = this.onAddHole.bind(this);\r\n        this.onRemoveHole = this.onRemoveHole.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            name: '',\r\n            location: '',\r\n            holes: [],\r\n            par: 0,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        //get currrent course data to populate state variables\r\n        axios.get('http://localhost:5000/courses/'+this.props.match.params.id)\r\n        .then(response => {\r\n            this.setState({\r\n                name: response.data.name,\r\n                location: response.data.location,\r\n                holes: response.data.holes,\r\n                par: response.data.par,\r\n            })\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    //triggered by user changing course name in the select field\r\n    onChangeName(e) {\r\n        this.setState({\r\n            name: e.target.value\r\n        })\r\n    }\r\n\r\n    //triggered by the user changing location in the select field\r\n    onChangeLocation(e) {\r\n        this.setState({\r\n            location: e.target.value\r\n        })\r\n    }\r\n\r\n    //triggered when user clicks \"add hole\" button\r\n    onAddHole = () => {\r\n        this.setState({\r\n            holes: this.state.holes.concat([{par: 3}])\r\n        })\r\n    }\r\n\r\n    //triggered by user clicking \"-\" button to remove a hole\r\n    onRemoveHole = idx => () => {\r\n        this.setState({\r\n            holes: this.state.holes.filter((s, sidx) => idx !== sidx)\r\n        })\r\n    }\r\n\r\n    //triggered by user changing the par value of a single hole\r\n    onChangeHoles = idx => e => {\r\n        const newHoles = this.state.holes.map((hole, sidx) => {\r\n            if (idx !== sidx) return hole;\r\n            return {...hole, par: e.target.value };\r\n        });\r\n\r\n        this.setState(state => ({...state, holes: newHoles}), () => {\r\n            //callback function to ensure state is updated before elements are rendered\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        //calculate the total par for the entire course\r\n        let temp = 0;\r\n        for (let i = 0; i < this.state.holes.length; i++) {\r\n            temp = temp + parseInt(this.state.holes[i].par);\r\n        }\r\n\r\n        //store the total par in the state and then save the updated course object\r\n        this.setState(state => ({...state, par: temp}), () => {\r\n            //callback function to ensure state is updated before elements are rendered\r\n        \r\n            const course = {\r\n                name: this.state.name,\r\n                location: this.state.location,\r\n                holes: this.state.holes,\r\n                par: this.state.par \r\n            }\r\n    \r\n            axios.post('http://localhost:5000/courses/update/'+this.props.match.params.id, course)\r\n            .then(res => console.log(res.data))\r\n            .catch((error) => {\r\n              console.log(error);\r\n            })\r\n    \r\n            //redirect the user back to the course list page\r\n            window.location = '/courselist';\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n          <h3>Change Courses</h3>\r\n          <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\"> \r\n                <label>Name: </label>\r\n                <input  type=\"text\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={this.state.name}\r\n                    onChange={this.onChangeName}\r\n                    />\r\n                </div>\r\n            <div>\r\n                \r\n            </div>\r\n            <div className=\"form-group\"> \r\n              <label>Location: </label>\r\n              <input  type=\"text\"\r\n                  required\r\n                  className=\"form-control\"\r\n                  value={this.state.location}\r\n                  onChange={this.onChangeLocation}\r\n                  />\r\n            </div>\r\n\r\n            {this.state.holes.map((hole, idx) => (\r\n                <div className=\"hole\" key={hole._id}>\r\n                    <input\r\n                        type=\"number\"\r\n                        value={hole.par}\r\n                        onChange={this.onChangeHoles(idx)}\r\n                    />\r\n                    <button\r\n                        type = \"button\"\r\n                        onClick={this.onRemoveHole(idx)}\r\n                        className=\"small\"\r\n                    >\r\n                        -\r\n                    </button>\r\n                </div>\r\n            ))}\r\n            <button\r\n                type=\"button\"\r\n                onClick={this.onAddHole}\r\n                className=\"small\"\r\n            >\r\n                Add Hole\r\n            </button>\r\n    \r\n            <div className=\"form-group\">\r\n              <input type=\"submit\" value=\"Submit Changes\" className=\"btn btn-primary\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n        )\r\n      }\r\n}","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\components\\course-list.component.js",["341","342"],"import React, { Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n//creates a JSX element from given course properties\r\n//referenced in the courseList() function\r\nconst Course = props => (\r\n    <tr>\r\n      <td>{props.course.name}</td>\r\n      <td>{props.course.location}</td>\r\n      <td>{props.course.holes.length}</td>\r\n      <td>\r\n        <Link to={\"/editcourse/\"+props.course._id}>edit</Link> | <a href=\"#\" onClick={() => { props.deleteCourse(props.course._id) }}>delete</a>\r\n      </td>\r\n    </tr>\r\n)\r\n\r\n//test function that maps an array of holes\r\n//into html to be displayed on the screen\r\n//saving this for later to be used in the \"view course\" pages\r\nconst Test = ({holes}) => (\r\n  <> \r\n    {holes.map(hole => (\r\n      <div className=\"hole\" key={hole._id}>{hole.par}</div>\r\n    ))}\r\n  </>\r\n)\r\n\r\nexport default class CourseList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.deleteCourse = this.deleteCourse.bind(this);\r\n\r\n        this.state = {courses: [] };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        //get course data from database\r\n        axios.get('http://localhost:5000/courses/')\r\n        .then(response => {\r\n            this.setState({ courses: response.data})\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    //sends a delete request to the database\r\n    //and then filters the deleted course from the array\r\n    deleteCourse(id) {\r\n        axios.delete('http://localhost:5000/courses/' + id)\r\n        .then(res => console.log(res.data));\r\n\r\n        this.setState({\r\n            courses: this.state.courses.filter(el => el._id !== id)\r\n        })\r\n    }\r\n\r\n    //maps the course array into individual \r\n    //JSX elements to be rendered\r\n    courseList() {\r\n        return this.state.courses.map(currentcourse => {\r\n          return <Course course={currentcourse} deleteCourse={this.deleteCourse} key={currentcourse._id}/>;\r\n        })\r\n      }\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"white_background\">\r\n            <h3 >Course List</h3>\r\n            <table className=\"table\">\r\n              <thead className=\"thead-light\">\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <th>Location</th>\r\n                  <th>Holes</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                { this.courseList() }\r\n              </tbody>\r\n            </table>\r\n            \r\n          </div>\r\n        )\r\n      }\r\n}","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\components\\homepage-component.js",["343","344","345"],"C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\components\\create-course.component.js",["346","347","348","349","350"],"import React, { Component} from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {useAuth0, withAuthenticationRequired } from \"@auth0/auth0-react\";\r\nimport axios from 'axios';\r\nimport { withAuth0 } from '@auth0/auth0-react';\r\nimport LoginMessage from \"./login-message.component\";\r\n\r\n\r\nclass CreateCourse extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeName = this.onChangeName.bind(this);\r\n        this.onChangeLocation = this.onChangeLocation.bind(this);\r\n        this.onChangeHoles = this.onChangeHoles.bind(this);\r\n        this.onAddHole = this.onAddHole.bind(this);\r\n        this.onRemoveHole = this.onRemoveHole.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        const { isAuthenticated } = this.props.auth0;\r\n\r\n        if (isAuthenticated) {\r\n          const { user } = this.props.auth0;\r\n          const {nickname, email} = user;\r\n          this.state = {\r\n            name: '',\r\n            location: '',\r\n            holes: [],\r\n            par: 0,\r\n            isAuth: isAuthenticated\r\n            }\r\n        }\r\n\r\n        else {\r\n            this.state = {\r\n                name: '',\r\n                location: '',\r\n                holes: [],\r\n                par: 0,\r\n                isAuth: false\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    //triggered by the user changing the username in the select field\r\n    onChangeName(e) {\r\n        this.setState({\r\n            name: e.target.value\r\n        })\r\n    }\r\n\r\n    //triggered by the user changing the location in the select field\r\n    onChangeLocation(e) {\r\n        this.setState({\r\n            location: e.target.value\r\n        })\r\n    }\r\n\r\n    //triggered by the user clicking the \"add hole\" button\r\n    onAddHole = () => {\r\n        this.setState({\r\n            holes: this.state.holes.concat([{par: 3}])\r\n        })\r\n    }\r\n\r\n    //triggered by the user clicking the \"-\" button to remove a hole\r\n    onRemoveHole = idx => () => {\r\n        this.setState({\r\n            holes: this.state.holes.filter((s, sidx) => idx !== sidx)\r\n        })\r\n    }\r\n\r\n    //triggered if the user changes the par value for a certain hole\r\n    onChangeHoles = idx => e => {\r\n        const newHoles = this.state.holes.map((hole, sidx) => {\r\n            if (idx !== sidx) return hole;\r\n            return {...hole, par: e.target.value };\r\n        });\r\n\r\n        this.setState(state => ({...state, holes: newHoles}), () => {\r\n            //callback function to ensure state is updated before elements are rendered\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        //calculate the overall par for the entire course to be stored in the state\r\n        let temp = 0;\r\n        for (let i = 0; i < this.state.holes.length; i++) {\r\n            temp = temp + parseInt(this.state.holes[i].par);\r\n        }\r\n\r\n        //store the overall par score in the state\r\n        this.setState(state => ({...state, par: temp}), () => {\r\n            //callback function to ensure state is updated before elements are rendered\r\n\r\n            const course = {\r\n                name: this.state.name,\r\n                location: this.state.location,\r\n                holes: this.state.holes,\r\n                par: this.state.par            \r\n            }\r\n            \r\n            //post the course to the database\r\n            axios.post('http://localhost:5000/courses/add', course)\r\n            .then(res => console.log(res.data));\r\n        \r\n            //redirect back to the course list page\r\n            window.location = '/courselist';\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.state.isAuth) { \r\n            return (\r\n                <div>\r\n                  <LoginMessage/>\r\n                </div>\r\n            )\r\n          }\r\n\r\n        return (\r\n        <div className=\"scorecard_elements\">\r\n\r\n            <div className =\"profile_header\">\r\n                <h3>Create Course</h3>\r\n            </div>\r\n\r\n          <form onSubmit={this.onSubmit}>\r\n            <div className=\"form-group\"> \r\n                <label>Name: </label>\r\n                <input  type=\"text\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={this.state.name}\r\n                    onChange={this.onChangeName}\r\n                    />\r\n                </div>\r\n            <div>\r\n                \r\n            </div>\r\n            <div className=\"form-group\"> \r\n              <label>Location: </label>\r\n              <input  type=\"text\"\r\n                  required\r\n                  className=\"form-control\"\r\n                  value={this.state.location}\r\n                  onChange={this.onChangeLocation}\r\n                  />\r\n            </div>\r\n\r\n            <div className=\"score_boxes\">\r\n                {this.state.holes.map((hole, idx) => (\r\n                    <div className=\"hole\" key={hole._id}>\r\n                        <input\r\n                            type=\"number\"\r\n                            value={hole.par}\r\n                            onChange={this.onChangeHoles(idx)}\r\n                        />\r\n                        <button\r\n                            type = \"button\"\r\n                            onClick={this.onRemoveHole(idx)}\r\n                            className=\"small\"\r\n                        >\r\n                            -\r\n                        </button>\r\n                    </div>\r\n                ))}\r\n            \r\n                <button\r\n                    type=\"button\"\r\n                    onClick={this.onAddHole}\r\n                    className=\"small\"\r\n                >\r\n                    Add Hole\r\n                </button>\r\n\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input type=\"submit\" value=\"Create Course\" className=\"btn btn-primary\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n        )\r\n      }\r\n}\r\n\r\nexport default withAuth0(CreateCourse);","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\components\\Navbar\\index.js",["351"],"import React from 'react'\r\nimport {FaBars} from 'react-icons/fa';\r\nimport { Nav, NavLink, NavbarContainer, Bars, NavMenu, NavBtn, NavBtnLink} from './NavBarElements'\r\nimport AuthenticationButton from \"../authentication-button\";\r\n\r\nconst Navbar = ({toggle}) => {\r\n    return (\r\n        <>\r\n            <Nav>\r\n                <NavbarContainer>\r\n                    <NavLink  to=\"/\">\r\n                        BirdieTracker\r\n                    </NavLink>\r\n                    <Bars onClick={toggle}>\r\n                        <FaBars/>\r\n                    </Bars>\r\n                    <NavMenu>\r\n                        <NavLink to=\"/scorecardlist\" activeStyle>\r\n                            Scorecards\r\n                        </NavLink>\r\n                        <NavLink to=\"/createscorecard\" activeStyle>\r\n                            Create Scorecard\r\n                        </NavLink>\r\n                        <NavLink to=\"/createcourse\" activeStyle>\r\n                            Create Course\r\n                        </NavLink>\r\n                        <NavLink to=\"/courselist\" activeStyle>\r\n                            Courses\r\n                        </NavLink>\r\n                        <NavLink to=\"/profile\" activeStyle>\r\n                            Profile\r\n                        </NavLink>\r\n                    </NavMenu>\r\n                    <NavBtn>\r\n                        <AuthenticationButton/>\r\n                    </NavBtn>\r\n                </NavbarContainer>\r\n            </Nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\components\\Navbar\\NavBarElements.js",[],"C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\components\\Sidebar\\index.js",["352","353"],"import { Auth0Provider } from '@auth0/auth0-react';\r\nimport React from 'react';\r\nimport AuthenticationButton from '../authentication-button';\r\nimport { \r\n    SidebarContainer, \r\n    Icon, \r\n    CloseIcon, \r\n    SidebarLink, \r\n    SideBtn, \r\n    SidebarMenu,\r\n    SidebarWrapper,\r\n    SideBtnLink } from './SidebarElements';\r\n\r\nconst Sidebar = ({isOpen, toggle}) => {\r\n    return (\r\n        <SidebarContainer isOpen={isOpen} onClick={toggle}>\r\n\r\n            <Icon onClick={toggle}>\r\n                <CloseIcon />\r\n            </Icon>\r\n\r\n            <SidebarWrapper>\r\n\r\n                <SidebarMenu>\r\n\r\n                    <SidebarLink to=\"/scorecardlist\" activeStyle>\r\n                        Scorecards\r\n                    </SidebarLink>\r\n\r\n                    <SidebarLink to=\"/createscorecard\" activeStyle>\r\n                        Create Scorecard\r\n                    </SidebarLink>\r\n\r\n                    <SidebarLink to=\"/createcourse\" activeStyle>\r\n                        Create Course\r\n                    </SidebarLink>\r\n\r\n                    <SidebarLink to=\"/courselist\" activeStyle>\r\n                        Courses\r\n                    </SidebarLink>\r\n\r\n                    <SidebarLink to=\"/profile\" activeStyle>\r\n                        Profile\r\n                    </SidebarLink>\r\n\r\n                    <SideBtn>\r\n                        <AuthenticationButton/>\r\n                    </SideBtn>\r\n                    \r\n                </SidebarMenu>\r\n\r\n            </SidebarWrapper>\r\n\r\n        </SidebarContainer>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\components\\Sidebar\\SidebarElements.js",[],"C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\auth\\auth0-provider-with-history.js",[],"C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\components\\authentication-button.js",[],"C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\components\\login-button.js",[],"C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\components\\logout-button.js",[],"C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\components\\profile.component.js",["354","355","356","357"],"C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\components\\loading-component.js",["358","359"],"import React, { Component} from 'react';\r\nimport load_image from '../Images/hourglass1.jfif';\r\n\r\n\r\nconst Loading = () => {\r\n\r\n    return (\r\n        <div className=\"outer_container\">\r\n            <div className=\"loading\">\r\n                <h2>LOADING...</h2>\r\n                <div className=\"loading_image\">\r\n                    <img src={load_image} width=\"100\" height=\"100\"/>\r\n                </div>\r\n            </div>   \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loading;","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\auth\\protected-route.js",[],"C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker2\\frontend\\src\\components\\login-message.component.js",["360"],"import React, { Component} from 'react';\r\nimport AuthenticationButton from \"./authentication-button\";\r\n\r\nconst LoginMessage = () => {\r\n\r\n    return (\r\n        <div className=\"outer_container\">\r\n            <div className=\"center_horz_vert\">\r\n                <div className=\"center_div_vert\">\r\n                    <h1>Please log in to view this page!</h1>\r\n                </div>\r\n                \r\n                <div className=\"center_button\">\r\n                    <AuthenticationButton className=\"center\"/>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginMessage;","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\index.js",[],"C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\App.js",["361","362","363","364","365","366","367"],"C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\components\\edit-scorecards.component.js",["368","369","370"],"import React, { Component} from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from 'axios';\r\nimport { withAuth0 } from '@auth0/auth0-react';\r\n\r\nclass EditScorecard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeCourse = this.onChangeCourse.bind(this);\r\n        this.onChangeDate = this.onChangeDate.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.updateScores = this.updateScores.bind(this);\r\n        this.onChangeScores = this.onChangeScores.bind(this);\r\n\r\n        const {isAuthenticated } = this.props.auth0;\r\n\r\n        this.state = {\r\n          username: '',\r\n          course: '',\r\n          score: 0,\r\n          par: 0,\r\n          scores: [],\r\n          date: new Date(),\r\n          users: [],\r\n          courses: [],\r\n          isAuth: isAuthenticated,\r\n          userAccount: null,\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n\r\n      //user must be logged in or else we will be adding blank user objects\r\n      if (this.state.isAuth) {\r\n\r\n        //load in user data \r\n        axios.get('https://birdie-tracker.herokuapp.com/users/')\r\n        .then(response => {\r\n          if (response.data.length > 0) {\r\n\r\n            let matched = false;\r\n            //search through the users and find the one associated with our logged in user\r\n            for (let i = 0; i < response.data.length; i++) {\r\n              if (response.data[i].username == this.state.username) {\r\n                  console.log(\"Match found\");\r\n\r\n                  //once correct user is found, save their info in the state to be used later\r\n                  //when updating the user object. \r\n                  this.setState(state => ({\r\n                    ...state,\r\n                    userAccount: response.data[i],\r\n                  }))\r\n                  matched = true;\r\n                  break;\r\n              }\r\n            }\r\n          }\r\n        })\r\n\r\n       //load in scorecard data from selected scorecard\r\n        axios.get('https://birdie-tracker.herokuapp.com/scorecards/'+this.props.match.params.id)\r\n        .then(response => {\r\n            this.setState({\r\n                username: response.data.username,\r\n                course: response.data.course,\r\n                score: response.data.score,\r\n                scores: response.data.scores,\r\n                date: new Date(response.data.date),\r\n                par: response.data.par,\r\n            })\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n\r\n        //load in course data for dropdown select\r\n        axios.get('https://birdie-tracker.herokuapp.com/courses/')\r\n        .then(response => {\r\n          if (response.data.length > 0) {\r\n            this.setState(state => ({...state,\r\n              courses: response.data,\r\n            }), () => {\r\n              //callback function to ensure state is updated before elements are rendered\r\n            })\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n\r\n    //loops through the courses array to find the one the user selected\r\n    //then updates the state with the corresponding values for scores and par\r\n    //so that the form elements for the individual scores can be rendered\r\n    updateScores() {\r\n      //set the number of holes based on which course is selected\r\n      for (let i = 0; i < this.state.courses.length; i++) {\r\n        if (this.state.courses[i].name == this.state.course) {\r\n          this.setState(state=> ({...state, \r\n            scores: this.state.courses[i].holes,\r\n            par: this.state.courses[i].par}), () => {\r\n            //callback function to ensure state is updated before elements are rendered\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    //triggered by the user changing the score for an individual hole\r\n    onChangeScores = idx => e => {\r\n      const newScores = this.state.scores.map((score, sidx) => {\r\n          if (idx !== sidx) return score;\r\n          return {...score, par: e.target.value };\r\n      });\r\n\r\n      this.setState(state => ({...state, scores: newScores}), () => {\r\n        //callback function to ensure state is updated before elements are rendered\r\n      });\r\n  }\r\n\r\n    //triggered by the user changing the course in the select field\r\n    //calls updateScores() method to re-render the holes for the newly selected course\r\n    onChangeCourse(e) {\r\n      this.setState(state => ({...state, course: e.target.value}), () => {\r\n        this.updateScores();\r\n      })\r\n  }\r\n\r\n    //triggered by the user changing the date value in the select field\r\n    onChangeDate(date) {\r\n        this.setState({\r\n            date: date\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        //calculate the total score based on the individual holes\r\n        let round_score = 0;\r\n        for (let i = 0; i < this.state.scores.length; i++) {\r\n          round_score = round_score + parseInt(this.state.scores[i].par);\r\n        }\r\n\r\n        //set the score in the stat and wait to post the new\r\n        //scorecard until the state is updated by using\r\n        //callback function\r\n        this.setState(state => ({...state, score: round_score}), () => {\r\n        \r\n          const scorecard = {\r\n            username: this.state.username,\r\n            course: this.state.course,\r\n            score: this.state.score,\r\n            date: this.state.date,\r\n            scores: this.state.scores,\r\n            par: this.state.par\r\n          }\r\n\r\n          //save the updated scorecard to the database\r\n          axios.post('https://birdie-tracker.herokuapp.com/scorecards/update/'+this.props.match.params.id, scorecard)\r\n          .then(res => console.log(res.data))\r\n          .catch((error) => {\r\n            console.log(error);\r\n          })\r\n        \r\n        })\r\n\r\n        //can only update user statistics if a user account exists\r\n        if (this.state.userAccount != null) {\r\n\r\n          let new_best = this.state.userAccount.best_score;\r\n          let new_worst = this.state.userAccount.worst_score;\r\n          let score = round_score - this.state.par;\r\n          if ( score < this.state.userAccount.best_score) {\r\n            new_best = score;\r\n          }\r\n          if ( score > this.state.userAccount.worst_score) {\r\n            new_worst = score;\r\n          }\r\n          \r\n\r\n          const user = {\r\n            username: this.state.userAccount.username,\r\n            rounds_played: this.state.userAccount.rounds_played,\r\n            best_score: new_best,\r\n            worst_score: new_worst,\r\n          }\r\n  \r\n          console.log(user);\r\n          \r\n          //update the user object in the database\r\n          axios.post('https://birdie-tracker.herokuapp.com/users/update/'+this.state.userAccount._id, user)\r\n          .then(res => console.log(res.data))\r\n          .catch((error) => {\r\n            console.log(error);\r\n          })\r\n\r\n        }\r\n\r\n        //redirect the user back to the scorecard list page\r\n        window.location = 'https://dreamy-mcnulty-8d46e1.netlify.app/scorecardlist';\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div className = \"scorecard_elements\">\r\n\r\n          <div className =\"profile_header\">\r\n              <h3>Edit Scorecard</h3>\r\n          </div>\r\n\r\n          <form onSubmit={this.onSubmit}>\r\n\r\n            <div className=\"form-group\"> \r\n              <label>Course: </label>\r\n              <select ref=\"userInput\"\r\n                  required\r\n                  className=\"form-control\"\r\n                  value={this.state.course}\r\n                  onChange={this.onChangeCourse}>\r\n                  {\r\n                    this.state.courses.map(function(course) {\r\n                      return <option \r\n                        key={course.name}\r\n                        value={course.name}>{course.name}\r\n                        </option>;\r\n                    })\r\n                  }\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Date: </label>\r\n              <div>\r\n                <DatePicker\r\n                  selected={this.state.date}\r\n                  onChange={this.onChangeDate}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"score_boxes\">\r\n              {this.state.scores.map((score, idx) => (\r\n                  <div className=\"score\" key={score._id}>\r\n                    <label>Hole {idx + 1} score: </label>\r\n                      <div>\r\n                        <input\r\n                            type=\"number\"\r\n                            value={score.par}\r\n                            onChange={this.onChangeScores(idx)}\r\n                        />\r\n                      </div>\r\n                  </div>\r\n              ))}\r\n            </div>\r\n    \r\n            <div className=\"form-group\">\r\n              <input type=\"submit\" value=\"Submit Changes\" className=\"btn btn-primary\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n        )\r\n      }\r\n}\r\n\r\n//export withAuth0 to allow use of user's username for the scorecard\r\nexport default withAuth0(EditScorecard);","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\components\\create-user.component.js",[],"C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\components\\create-scorecard.component.js",["371","372","373","374"],"import React, { Component} from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from 'axios';\r\nimport { withAuth0 } from '@auth0/auth0-react';\r\nimport LoginMessage from \"./login-message.component\";\r\n\r\nclass CreateScorecard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeCourse = this.onChangeCourse.bind(this);\r\n        this.onChangeDate = this.onChangeDate.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.updateScores = this.updateScores.bind(this);\r\n        this.onChangeScores = this.onChangeScores.bind(this);\r\n\r\n        const {isAuthenticated } = this.props.auth0;\r\n\r\n        if (isAuthenticated) {\r\n          const { user } = this.props.auth0;\r\n          const {nickname, email} = user;\r\n          this.state = {\r\n            username: nickname,\r\n            course: '',\r\n            score: 0,\r\n            par: 0,\r\n            scores: [],\r\n            date: new Date(),\r\n            users: [],\r\n            courses: [],\r\n            isAuth: isAuthenticated,\r\n            userAccount: null,\r\n          }\r\n        }\r\n\r\n        else {\r\n          this.state = {\r\n            username: '',\r\n            course: '',\r\n            score: 0,\r\n            par: 0,\r\n            scores: [],\r\n            date: new Date(),\r\n            users: [],\r\n            courses: [],\r\n            isAuth: false,\r\n            userAccount: null,\r\n        }\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n      //user must be logged in or else we will be adding blank user objects\r\n      if (this.state.isAuth) {\r\n\r\n        //load in user data \r\n        axios.get('https://birdie-tracker.herokuapp.com/users/')\r\n        .then(response => {\r\n          if (response.data.length > 0) {\r\n\r\n            let matched = false;\r\n            //search through the users and find the one associated with our logged in user\r\n            for (let i = 0; i < response.data.length; i++) {\r\n              if (response.data[i].username == this.state.username) {\r\n                  console.log(\"Match found\");\r\n\r\n                  //once correct user is found, save their info in the state to be used later\r\n                  //when updating the user object. \r\n                  this.setState(state => ({\r\n                    ...state,\r\n                    userAccount: response.data[i],\r\n                  }))\r\n                  matched = true;\r\n                  break;\r\n              }\r\n            }\r\n          }\r\n        })\r\n\r\n        //load in course data for dropdown select\r\n        axios.get('https://birdie-tracker.herokuapp.com/courses/')\r\n        .then(response => {\r\n          if (response.data.length > 0) {\r\n            this.setState(state => ({...state,\r\n              courses: response.data,\r\n              course: response.data[0].name,\r\n              scores: response.data[0].holes,\r\n              holes: response.data[0].holes,\r\n              par: response.data[0].par,\r\n            }), () => {\r\n              //callback function to ensure state is updated before elements are rendered\r\n            })\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    //loops through the courses array to find the one the user selected\r\n    //then updates the state with the corresponding values for scores and par\r\n    //so that the form elements for the individual scores can be rendered\r\n    updateScores() {\r\n      //set the number of holes based on which course is selected\r\n      for (let i = 0; i < this.state.courses.length; i++) {\r\n        if (this.state.courses[i].name == this.state.course) {\r\n          this.setState(state=> ({...state, \r\n            scores: this.state.courses[i].holes,\r\n            par: this.state.courses[i].par}), () => {\r\n            //callback function to ensure state is updated before elements are rendered\r\n\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    //triggered by the user changing the score for an individual hole\r\n    onChangeScores = idx => e => {\r\n      const newScores = this.state.scores.map((score, sidx) => {\r\n          if (idx !== sidx) return score;\r\n          return {...score, par: e.target.value };\r\n      });\r\n\r\n      this.setState(state => ({...state, scores: newScores}), () => {\r\n        //callback function to ensure state is updated before elements are rendered\r\n      });\r\n  }\r\n\r\n    //triggered by the user changing the course\r\n    //calls updateScores() function to re-render the holes for the newly selected course\r\n    onChangeCourse(e) {\r\n        this.setState(state => ({...state, course: e.target.value}), () => {\r\n          this.updateScores();\r\n        })\r\n    }\r\n\r\n    //triggered by the user changing the date in the select field\r\n    onChangeDate(date) {\r\n        this.setState({\r\n            date: date\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        //calculate the total score based on the individual holes\r\n        let round_score = 0;\r\n        for (let i = 0; i < this.state.scores.length; i++) {\r\n          round_score = round_score + parseInt(this.state.scores[i].par);\r\n        }\r\n\r\n        //set the score in the state and wait to post the new\r\n        //scorecard until the state is updated by using\r\n        //callback function\r\n        this.setState(state => ({...state, score: round_score}), () => {\r\n\r\n          const scorecard = {\r\n            username: this.state.username,\r\n            course: this.state.course,\r\n            score: this.state.score,\r\n            date: this.state.date,\r\n            scores: this.state.scores,\r\n            par: this.state.par\r\n          }\r\n\r\n          axios.post('https://birdie-tracker.herokuapp.com/scorecards/add', scorecard)\r\n          .then(res => console.log(res.data));\r\n\r\n        })\r\n\r\n        //can only update user statistics if a user account exists\r\n        if (this.state.userAccount != null) {\r\n\r\n          let new_best = this.state.userAccount.best_score;\r\n          let new_worst = this.state.userAccount.worst_score;\r\n          let score = round_score - this.state.par;\r\n          if ( score < this.state.userAccount.best_score) {\r\n            new_best = score;\r\n          }\r\n          if ( score > this.state.userAccount.worst_score) {\r\n            new_worst = score;\r\n          }\r\n          \r\n\r\n          const user = {\r\n            username: this.state.userAccount.username,\r\n            //update the user object by adding one to the number of rounds played\r\n            rounds_played: this.state.userAccount.rounds_played + 1,\r\n            best_score: new_best,\r\n            worst_score: new_worst,\r\n          }\r\n  \r\n          console.log(user);\r\n          \r\n          //update the user object in the database\r\n          axios.post('https://birdie-tracker.herokuapp.com/users/update/'+this.state.userAccount._id, user)\r\n          .then(res => console.log(res.data))\r\n          .catch((error) => {\r\n            console.log(error);\r\n          })\r\n\r\n        }\r\n        //took this out for testing\r\n        //window.location = 'https://dreamy-mcnulty-8d46e1.netlify.app/scorecardlist';\r\n    }\r\n\r\n    render() {\r\n\r\n      if (!this.state.isAuth) { \r\n        return (\r\n            <div>\r\n              <LoginMessage/>\r\n            </div>\r\n        )\r\n      }\r\n\r\n        return (\r\n        <div className = \"scorecard_elements\">\r\n\r\n          <div className =\"profile_header\">\r\n            <h3>Create Scorecard</h3>\r\n          </div>\r\n\r\n          <form onSubmit={this.onSubmit}>\r\n\r\n            <div className=\"form-group\"> \r\n              <label>Course: </label>\r\n              <select ref=\"userInput\"\r\n                  required\r\n                  className=\"form-control\"\r\n                  value={this.state.course}\r\n                  onChange={this.onChangeCourse}>\r\n                  {\r\n                    this.state.courses.map(function(course) {\r\n                      return <option \r\n                        key={course.name}\r\n                        value={course.name}>{course.name}\r\n                        </option>;\r\n                    })\r\n                  }\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Date: </label>\r\n              <div>\r\n                <DatePicker\r\n                  selected={this.state.date}\r\n                  onChange={this.onChangeDate}\r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"score_boxes\">\r\n              {this.state.scores.map((score, idx) => (\r\n                  <div className=\"score\" key={score._id}>\r\n                    <label>Hole {idx + 1} score: </label>\r\n                      <div>\r\n                        <input\r\n                            type=\"number\"\r\n                            value={score.par}\r\n                            onChange={this.onChangeScores(idx)}\r\n                        />\r\n                      </div>\r\n                  </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input type=\"submit\" value=\"Create Scorecard\" className=\"btn btn-primary\" />\r\n            </div>\r\n          </form>\r\n\r\n        </div>\r\n        )\r\n      }\r\n}\r\n\r\n//export withAuth0 to allow use of user's username for the scorecard\r\nexport default withAuth0(CreateScorecard);","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\components\\create-course.component.js",["375","376","377","378","379"],"import React, { Component} from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {useAuth0, withAuthenticationRequired } from \"@auth0/auth0-react\";\r\nimport axios from 'axios';\r\nimport { withAuth0 } from '@auth0/auth0-react';\r\nimport LoginMessage from \"./login-message.component\";\r\n\r\n\r\nclass CreateCourse extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeName = this.onChangeName.bind(this);\r\n        this.onChangeLocation = this.onChangeLocation.bind(this);\r\n        this.onChangeHoles = this.onChangeHoles.bind(this);\r\n        this.onAddHole = this.onAddHole.bind(this);\r\n        this.onRemoveHole = this.onRemoveHole.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        const { isAuthenticated } = this.props.auth0;\r\n\r\n        if (isAuthenticated) {\r\n          const { user } = this.props.auth0;\r\n          const {nickname, email} = user;\r\n          this.state = {\r\n            name: '',\r\n            location: '',\r\n            holes: [],\r\n            par: 0,\r\n            isAuth: isAuthenticated\r\n            }\r\n        }\r\n\r\n        else {\r\n            this.state = {\r\n                name: '',\r\n                location: '',\r\n                holes: [],\r\n                par: 0,\r\n                isAuth: false\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    //triggered by the user changing the username in the select field\r\n    onChangeName(e) {\r\n        this.setState({\r\n            name: e.target.value\r\n        })\r\n    }\r\n\r\n    //triggered by the user changing the location in the select field\r\n    onChangeLocation(e) {\r\n        this.setState({\r\n            location: e.target.value\r\n        })\r\n    }\r\n\r\n    //triggered by the user clicking the \"add hole\" button\r\n    onAddHole = () => {\r\n        this.setState({\r\n            holes: this.state.holes.concat([{par: 3}])\r\n        })\r\n    }\r\n\r\n    //triggered by the user clicking the \"-\" button to remove a hole\r\n    onRemoveHole = idx => () => {\r\n        this.setState({\r\n            holes: this.state.holes.filter((s, sidx) => idx !== sidx)\r\n        })\r\n    }\r\n\r\n    //triggered if the user changes the par value for a certain hole\r\n    onChangeHoles = idx => e => {\r\n        const newHoles = this.state.holes.map((hole, sidx) => {\r\n            if (idx !== sidx) return hole;\r\n            return {...hole, par: e.target.value };\r\n        });\r\n\r\n        this.setState(state => ({...state, holes: newHoles}), () => {\r\n            //callback function to ensure state is updated before elements are rendered\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        //calculate the overall par for the entire course to be stored in the state\r\n        let temp = 0;\r\n        for (let i = 0; i < this.state.holes.length; i++) {\r\n            temp = temp + parseInt(this.state.holes[i].par);\r\n        }\r\n\r\n        //store the overall par score in the state\r\n        this.setState(state => ({...state, par: temp}), () => {\r\n            //callback function to ensure state is updated before elements are rendered\r\n\r\n            const course = {\r\n                name: this.state.name,\r\n                location: this.state.location,\r\n                holes: this.state.holes,\r\n                par: this.state.par            \r\n            }\r\n            \r\n            //post the course to the database\r\n            axios.post('https://birdie-tracker.herokuapp.com/courses/add', course)\r\n            .then(res => console.log(res.data));\r\n        \r\n            //redirect back to the course list page\r\n            window.location = 'https://dreamy-mcnulty-8d46e1.netlify.app/courselist';\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.state.isAuth) { \r\n            return (\r\n                <div>\r\n                  <LoginMessage/>\r\n                </div>\r\n            )\r\n          }\r\n\r\n        return (\r\n        <div className=\"scorecard_elements\">\r\n\r\n            <div className =\"profile_header\">\r\n                <h3>Create Course</h3>\r\n            </div>\r\n\r\n          <form onSubmit={this.onSubmit}>\r\n            <div className=\"form-group\"> \r\n                <label>Name: </label>\r\n                <input  type=\"text\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={this.state.name}\r\n                    onChange={this.onChangeName}\r\n                    />\r\n                </div>\r\n            <div>\r\n                \r\n            </div>\r\n            <div className=\"form-group\"> \r\n              <label>Location: </label>\r\n              <input  type=\"text\"\r\n                  required\r\n                  className=\"form-control\"\r\n                  value={this.state.location}\r\n                  onChange={this.onChangeLocation}\r\n                  />\r\n            </div>\r\n\r\n            <div className=\"score_boxes\">\r\n                {this.state.holes.map((hole, idx) => (\r\n                    <div className=\"hole\" key={hole._id}>\r\n                        <input\r\n                            type=\"number\"\r\n                            value={hole.par}\r\n                            onChange={this.onChangeHoles(idx)}\r\n                        />\r\n                        <button\r\n                            type = \"button\"\r\n                            onClick={this.onRemoveHole(idx)}\r\n                            className=\"small\"\r\n                        >\r\n                            -\r\n                        </button>\r\n                    </div>\r\n                ))}\r\n            \r\n                <button\r\n                    type=\"button\"\r\n                    onClick={this.onAddHole}\r\n                    className=\"small\"\r\n                >\r\n                    Add Hole\r\n                </button>\r\n\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input type=\"submit\" value=\"Create Course\" className=\"btn btn-primary\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n        )\r\n      }\r\n}\r\n\r\nexport default withAuth0(CreateCourse);","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\components\\scorecards-list.component.js",["380","381","382"],"import React, { Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { withAuth0 } from '@auth0/auth0-react';\r\nimport LoginMessage from \"./login-message.component\";\r\nimport Loading from \"./loading-component\";\r\n\r\n//creates a JSX element from the given scorecard properties\r\n//referenced in the scorecardList() function\r\nconst Scorecard = props => (\r\n    <tr>\r\n      <td>{props.scorecard.username}</td>\r\n      <td>{props.scorecard.course}</td>\r\n      <td>{props.scorecard.score} / {props.scorecard.par}</td>\r\n      <td>{props.scorecard.date.substring(0,10)}</td>\r\n      <td>\r\n        <Link to={\"/editscorecard/\"+props.scorecard._id}>edit</Link> | <a href=\"#\" onClick={() => { props.deleteScorecard(props.scorecard._id) }}>delete</a>\r\n      </td>\r\n    </tr>\r\n)\r\n\r\nclass ScorecardList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n       \r\n        this.state = {scorecards: []};\r\n        this.deleteScorecard = this.deleteScorecard.bind(this);\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        //get the scorecard data from the server\r\n        axios.get('https://birdie-tracker.herokuapp.com/scorecards/')\r\n        .then(response => {\r\n            this.setState({ scorecards: response.data})\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    //sends a delete request to the server and then filters\r\n    //the array to remove the deleted scorecard\r\n    deleteScorecard(id) {\r\n        axios.delete('https://birdie-tracker.herokuapp.com/scorecards/' + id)\r\n        .then(res => console.log(res.data));\r\n\r\n        this.setState({\r\n            scorecards: this.state.scorecards.filter(el => el._id !== id)\r\n        })\r\n    }\r\n\r\n    //maps each scorecard into a JSX element to be rendered\r\n   \r\n    scorecardList() {\r\n\r\n      const { isAuthenticated, user } = this.props.auth0;\r\n      const {nickname} = user;\r\n\r\n      if (isAuthenticated) {\r\n        return this.state.scorecards.map(currentscorecard => {\r\n          //only shows the scorecards for the logged in user.\r\n          if (currentscorecard.username == nickname) {\r\n            return <Scorecard scorecard={currentscorecard} deleteScorecard={this.deleteScorecard} key={currentscorecard._id}/>;\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    render() {\r\n\r\n      const { isLoading, isAuthenticated } = this.props.auth0;\r\n\r\n      if (isLoading) {\r\n        return <Loading />;\r\n      }\r\n\r\n      if (!isAuthenticated) { \r\n        return (\r\n            <div>\r\n              <LoginMessage/>\r\n            </div>\r\n        )\r\n      }\r\n      \r\n      return (\r\n\r\n        <div className=\"white_background\">\r\n          <h3>Logged Scorecards</h3>\r\n          <table className=\"table\">\r\n            <thead className=\"thead-light\">\r\n              <tr>\r\n                <th>Username</th>\r\n                <th>Course</th>\r\n                <th>Score</th>\r\n                <th>Date</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              { this.scorecardList() }\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )\r\n      }\r\n}\r\n\r\n//export withAuth0 to allow use of user's username for the scorecard\r\nexport default withAuth0(ScorecardList);","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\components\\course-list.component.js",["383","384"],"import React, { Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n//creates a JSX element from given course properties\r\n//referenced in the courseList() function\r\nconst Course = props => (\r\n    <tr>\r\n      <td>{props.course.name}</td>\r\n      <td>{props.course.location}</td>\r\n      <td>{props.course.holes.length}</td>\r\n      <td>\r\n        <Link to={\"/editcourse/\"+props.course._id}>edit</Link> | <a href=\"#\" onClick={() => { props.deleteCourse(props.course._id) }}>delete</a>\r\n      </td>\r\n    </tr>\r\n)\r\n\r\n//test function that maps an array of holes\r\n//into html to be displayed on the screen\r\n//saving this for later to be used in the \"view course\" pages\r\nconst Test = ({holes}) => (\r\n  <> \r\n    {holes.map(hole => (\r\n      <div className=\"hole\" key={hole._id}>{hole.par}</div>\r\n    ))}\r\n  </>\r\n)\r\n\r\nexport default class CourseList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.deleteCourse = this.deleteCourse.bind(this);\r\n\r\n        this.state = {courses: [] };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        //get course data from database\r\n        axios.get('https://birdie-tracker.herokuapp.com/courses/')\r\n        .then(response => {\r\n            this.setState({ courses: response.data})\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    //sends a delete request to the database\r\n    //and then filters the deleted course from the array\r\n    deleteCourse(id) {\r\n        axios.delete('https://birdie-tracker.herokuapp.com/courses/' + id)\r\n        .then(res => console.log(res.data));\r\n\r\n        this.setState({\r\n            courses: this.state.courses.filter(el => el._id !== id)\r\n        })\r\n    }\r\n\r\n    //maps the course array into individual \r\n    //JSX elements to be rendered\r\n    courseList() {\r\n        return this.state.courses.map(currentcourse => {\r\n          return <Course course={currentcourse} deleteCourse={this.deleteCourse} key={currentcourse._id}/>;\r\n        })\r\n      }\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"white_background\">\r\n            <h3 >Course List</h3>\r\n            <table className=\"table\">\r\n              <thead className=\"thead-light\">\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <th>Location</th>\r\n                  <th>Holes</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                { this.courseList() }\r\n              </tbody>\r\n            </table>\r\n            \r\n          </div>\r\n        )\r\n      }\r\n}","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\components\\edit-course.component.js",["385"],"import React, { Component} from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from 'axios';\r\n\r\nexport default class EditCourse extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeName = this.onChangeName.bind(this);\r\n        this.onChangeLocation = this.onChangeLocation.bind(this);\r\n        this.onChangeHoles = this.onChangeHoles.bind(this);\r\n        this.onAddHole = this.onAddHole.bind(this);\r\n        this.onRemoveHole = this.onRemoveHole.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            name: '',\r\n            location: '',\r\n            holes: [],\r\n            par: 0,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        //get currrent course data to populate state variables\r\n        axios.get('https://birdie-tracker.herokuapp.com/courses/'+this.props.match.params.id)\r\n        .then(response => {\r\n            this.setState({\r\n                name: response.data.name,\r\n                location: response.data.location,\r\n                holes: response.data.holes,\r\n                par: response.data.par,\r\n            })\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    //triggered by user changing course name in the select field\r\n    onChangeName(e) {\r\n        this.setState({\r\n            name: e.target.value\r\n        })\r\n    }\r\n\r\n    //triggered by the user changing location in the select field\r\n    onChangeLocation(e) {\r\n        this.setState({\r\n            location: e.target.value\r\n        })\r\n    }\r\n\r\n    //triggered when user clicks \"add hole\" button\r\n    onAddHole = () => {\r\n        this.setState({\r\n            holes: this.state.holes.concat([{par: 3}])\r\n        })\r\n    }\r\n\r\n    //triggered by user clicking \"-\" button to remove a hole\r\n    onRemoveHole = idx => () => {\r\n        this.setState({\r\n            holes: this.state.holes.filter((s, sidx) => idx !== sidx)\r\n        })\r\n    }\r\n\r\n    //triggered by user changing the par value of a single hole\r\n    onChangeHoles = idx => e => {\r\n        const newHoles = this.state.holes.map((hole, sidx) => {\r\n            if (idx !== sidx) return hole;\r\n            return {...hole, par: e.target.value };\r\n        });\r\n\r\n        this.setState(state => ({...state, holes: newHoles}), () => {\r\n            //callback function to ensure state is updated before elements are rendered\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        //calculate the total par for the entire course\r\n        let temp = 0;\r\n        for (let i = 0; i < this.state.holes.length; i++) {\r\n            temp = temp + parseInt(this.state.holes[i].par);\r\n        }\r\n\r\n        //store the total par in the state and then save the updated course object\r\n        this.setState(state => ({...state, par: temp}), () => {\r\n            //callback function to ensure state is updated before elements are rendered\r\n        \r\n            const course = {\r\n                name: this.state.name,\r\n                location: this.state.location,\r\n                holes: this.state.holes,\r\n                par: this.state.par \r\n            }\r\n    \r\n            axios.post('https://birdie-tracker.herokuapp.com/courses/update/'+this.props.match.params.id, course)\r\n            .then(res => console.log(res.data))\r\n            .catch((error) => {\r\n              console.log(error);\r\n            })\r\n    \r\n            //redirect the user back to the course list page\r\n            window.location = 'https://dreamy-mcnulty-8d46e1.netlify.app/courselist';\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n          <h3>Change Courses</h3>\r\n          <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\"> \r\n                <label>Name: </label>\r\n                <input  type=\"text\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={this.state.name}\r\n                    onChange={this.onChangeName}\r\n                    />\r\n                </div>\r\n            <div>\r\n                \r\n            </div>\r\n            <div className=\"form-group\"> \r\n              <label>Location: </label>\r\n              <input  type=\"text\"\r\n                  required\r\n                  className=\"form-control\"\r\n                  value={this.state.location}\r\n                  onChange={this.onChangeLocation}\r\n                  />\r\n            </div>\r\n\r\n            {this.state.holes.map((hole, idx) => (\r\n                <div className=\"hole\" key={hole._id}>\r\n                    <input\r\n                        type=\"number\"\r\n                        value={hole.par}\r\n                        onChange={this.onChangeHoles(idx)}\r\n                    />\r\n                    <button\r\n                        type = \"button\"\r\n                        onClick={this.onRemoveHole(idx)}\r\n                        className=\"small\"\r\n                    >\r\n                        -\r\n                    </button>\r\n                </div>\r\n            ))}\r\n            <button\r\n                type=\"button\"\r\n                onClick={this.onAddHole}\r\n                className=\"small\"\r\n            >\r\n                Add Hole\r\n            </button>\r\n    \r\n            <div className=\"form-group\">\r\n              <input type=\"submit\" value=\"Submit Changes\" className=\"btn btn-primary\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n        )\r\n      }\r\n}","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\components\\profile.component.js",["386","387","388","389"],"import React, {useState, useEffect} from \"react\";\r\nimport {useAuth0} from \"@auth0/auth0-react\";\r\nimport LoginMessage from \"./login-message.component\";\r\nimport axios from 'axios';\r\n\r\nconst Profile = () => {\r\n    const {isAuthenticated, user} = useAuth0();\r\n    const [matched, setMatched] = useState(false);\r\n    const [player, setPlayer] = useState(0);\r\n\r\n    useEffect(() => {\r\n\r\n        //need to find associated user object to be able to display user\r\n        //profile information and statistics\r\n        if (!matched && isAuthenticated) {\r\n            const {nickname} = user;\r\n            //load in user data \r\n            axios.get('https://birdie-tracker.herokuapp.com/users/')\r\n            .then(response => {\r\n                let player_found = false;\r\n                if (response.data.length > 0) {\r\n\r\n                    //search through the users and find the one associated with our logged in user\r\n                    for (let i = 0; i < response.data.length; i++) {\r\n                        if (response.data[i].username == nickname) {\r\n                            console.log(\"Player found in DB\");\r\n                            console.log(response.data[i]._id); //need this to edit the user later on\r\n                            player_found = true;\r\n                            setPlayer(response.data[i]); //save player object to state for later use\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    //if we couldn't find the associated user, create a new user object\r\n                    //this object is associated with the user's authentication credentials\r\n                    //and will be used to store the user's statistics in the DB. \r\n                    if (!player_found) {\r\n                        const user = {\r\n                            username: nickname,\r\n                            rounds_played: 0,\r\n                            best_score: 999,\r\n                            worst_score: -999,\r\n                        }\r\n                        setPlayer(user);\r\n            \r\n                        axios.post('https://birdie-tracker.herokuapp.com/users/add', user)\r\n                        .then(res => console.log(res.data));\r\n                        player_found = true;\r\n                    }\r\n                }\r\n\r\n                //if no users exist, then go ahead and create a new user object\r\n                //this object is associated with the user's authentication credentials\r\n                //and will be used to store the user's statistics in the DB. \r\n                else {\r\n\r\n                    const user = {\r\n                    username: nickname,\r\n                    rounds_played: 0,\r\n                    best_score: 999,\r\n                    worst_score: -999,\r\n                    }\r\n                    setPlayer(user);\r\n        \r\n                    axios.post('https://birdie-tracker.herokuapp.com/users/add', user)\r\n                    .then(res => console.log(res.data));\r\n                    player_found = true;\r\n                }\r\n                setMatched(player_found);\r\n                console.log(matched);\r\n            })\r\n            \r\n        }\r\n\r\n    });\r\n\r\n    const resetStats = (e) => {\r\n        \r\n        e.preventDefault();\r\n\r\n        //can only update user statistics if a user account exists\r\n        if (player != 0) {\r\n\r\n            //reset player stats\r\n            const user = {\r\n              username: player.username,\r\n              rounds_played: 0,\r\n              best_score: 999,\r\n              worst_score: -999,\r\n            }\r\n            console.log(user);\r\n            \r\n            //update the user object in the database\r\n            axios.post('https://birdie-tracker.herokuapp.com/users/update/'+player._id, user)\r\n            .then(res => console.log(res.data))\r\n            .catch((error) => {\r\n              console.log(error);\r\n            })\r\n\r\n            //will need to set matched to false so that the page re-loads the user-object from DB with\r\n            //the updated statistics\r\n            setMatched(false);\r\n          }\r\n    }\r\n\r\n    if (isAuthenticated) {\r\n        const {nickname, email, last_login} = user;\r\n\r\n        const test = matched;\r\n        \r\n        return (\r\n            <div>\r\n                <div className =\"profile_header\">\r\n                    <h2>Personal Information:</h2>\r\n                </div>\r\n\r\n                <div className = \"personal_info\">\r\n                    <h3>Username: {nickname}</h3>\r\n                    <h3>Email: {email}</h3>\r\n                </div>\r\n\r\n                <div className =\"profile_header\">\r\n                    <h2>Stats:</h2>\r\n                </div>\r\n\r\n                <div className = \"statistics\">\r\n                    <h3>Rounds Played: {player.rounds_played}</h3>\r\n                    <h3>Best Score: {player.best_score}</h3>\r\n                    <h3>Worst Score: {player.worst_score}</h3>\r\n\r\n                    <form onSubmit={resetStats}>\r\n                        <div className=\"top_margin\">\r\n                            <input type=\"submit\" value=\"Reset Player Stats\" className=\"btn btn-primary\"/>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <div>\r\n              <LoginMessage/>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n};\r\n\r\nexport default Profile;","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\components\\homepage-component.js",["390","391","392"],"import React, { Component} from 'react';\r\nimport axios from 'axios';\r\nimport logo from '../Images/dgbasket.jpg';\r\nimport AuthenticationButton from \"./authentication-button\";\r\n\r\nexport default class Homepage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n          <div>\r\n\r\n            <div>\r\n              <h3 className=\"header_centered\">Welcome to BirdieTracker!</h3>\r\n            </div>\r\n\r\n            <img src={logo} width=\"600\" height=\"600\" className=\"center_div_horz\"/>\r\n\r\n            <div className =\"profile_message\">\r\n                <h2>Your personal disc golf score tracking assistant</h2>\r\n            </div>\r\n\r\n          </div>\r\n        )\r\n      }\r\n}","C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\components\\loading-component.js",["393","394"],"C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\auth\\auth0-provider-with-history.js",[],"C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\auth\\protected-route.js",[],"C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\components\\Sidebar\\index.js",["395","396"],"C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\components\\Navbar\\index.js",["397"],"C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\components\\login-message.component.js",["398"],"C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\components\\authentication-button.js",[],"C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\components\\Sidebar\\SidebarElements.js",[],"C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\components\\Navbar\\NavBarElements.js",[],"C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\components\\login-button.js",[],"C:\\Users\\djnin\\Web Dev Projects\\BirdieTracker v3\\frontend\\src\\components\\logout-button.js",[],{"ruleId":"399","replacedBy":"400"},{"ruleId":"401","replacedBy":"402"},{"ruleId":"403","severity":1,"message":"404","line":1,"column":8,"nodeType":"405","messageId":"406","endLine":1,"endColumn":12},{"ruleId":"407","severity":1,"message":"408","line":13,"column":62,"nodeType":"409","endLine":13,"endColumn":135},{"ruleId":"399","replacedBy":"410"},{"ruleId":"401","replacedBy":"411"},{"ruleId":"403","severity":1,"message":"404","line":1,"column":8,"nodeType":"405","messageId":"406","endLine":1,"endColumn":12},{"ruleId":"412","severity":1,"message":"413","line":77,"column":40,"nodeType":"414","messageId":"415","endLine":77,"endColumn":42},{"ruleId":"407","severity":1,"message":"408","line":13,"column":72,"nodeType":"409","endLine":13,"endColumn":147},{"ruleId":"412","severity":1,"message":"413","line":67,"column":40,"nodeType":"414","messageId":"415","endLine":67,"endColumn":42},{"ruleId":"403","severity":1,"message":"416","line":2,"column":8,"nodeType":"405","messageId":"406","endLine":2,"endColumn":18},{"ruleId":"407","severity":1,"message":"408","line":17,"column":66,"nodeType":"409","endLine":17,"endColumn":135},{"ruleId":"403","severity":1,"message":"416","line":2,"column":8,"nodeType":"405","messageId":"406","endLine":2,"endColumn":18},{"ruleId":"403","severity":1,"message":"417","line":2,"column":8,"nodeType":"405","messageId":"406","endLine":2,"endColumn":13},{"ruleId":"418","severity":1,"message":"419","line":19,"column":13,"nodeType":"409","endLine":19,"endColumn":70},{"ruleId":"399","replacedBy":"420"},{"ruleId":"401","replacedBy":"421"},{"ruleId":"403","severity":1,"message":"404","line":1,"column":8,"nodeType":"405","messageId":"406","endLine":1,"endColumn":12},{"ruleId":"403","severity":1,"message":"422","line":5,"column":26,"nodeType":"405","messageId":"406","endLine":5,"endColumn":35},{"ruleId":"403","severity":1,"message":"423","line":10,"column":8,"nodeType":"405","messageId":"406","endLine":10,"endColumn":18},{"ruleId":"403","severity":1,"message":"424","line":19,"column":9,"nodeType":"405","messageId":"406","endLine":19,"endColumn":17},{"ruleId":"403","severity":1,"message":"425","line":19,"column":19,"nodeType":"405","messageId":"406","endLine":19,"endColumn":45},{"ruleId":"403","severity":1,"message":"426","line":20,"column":8,"nodeType":"405","messageId":"406","endLine":20,"endColumn":22},{"ruleId":"403","severity":1,"message":"427","line":21,"column":8,"nodeType":"405","messageId":"406","endLine":21,"endColumn":15},{"ruleId":"407","severity":1,"message":"408","line":17,"column":72,"nodeType":"409","endLine":17,"endColumn":147},{"ruleId":"428","severity":1,"message":"429","line":64,"column":59,"nodeType":"430","messageId":"431","endLine":64,"endColumn":61},{"ruleId":"412","severity":1,"message":"413","line":66,"column":41,"nodeType":"414","messageId":"415","endLine":66,"endColumn":43},{"ruleId":"399","replacedBy":"432"},{"ruleId":"401","replacedBy":"433"},{"ruleId":"403","severity":1,"message":"434","line":23,"column":28,"nodeType":"405","messageId":"406","endLine":23,"endColumn":33},{"ruleId":"412","severity":1,"message":"413","line":68,"column":45,"nodeType":"414","messageId":"415","endLine":68,"endColumn":47},{"ruleId":"403","severity":1,"message":"435","line":77,"column":19,"nodeType":"405","messageId":"406","endLine":77,"endColumn":26},{"ruleId":"412","severity":1,"message":"413","line":108,"column":40,"nodeType":"414","messageId":"415","endLine":108,"endColumn":42},{"ruleId":"412","severity":1,"message":"413","line":47,"column":45,"nodeType":"414","messageId":"415","endLine":47,"endColumn":47},{"ruleId":"403","severity":1,"message":"435","line":56,"column":19,"nodeType":"405","messageId":"406","endLine":56,"endColumn":26},{"ruleId":"412","severity":1,"message":"413","line":100,"column":40,"nodeType":"414","messageId":"415","endLine":100,"endColumn":42},{"ruleId":"403","severity":1,"message":"416","line":2,"column":8,"nodeType":"405","messageId":"406","endLine":2,"endColumn":18},{"ruleId":"407","severity":1,"message":"408","line":13,"column":66,"nodeType":"409","endLine":13,"endColumn":135},{"ruleId":"403","severity":1,"message":"436","line":21,"column":7,"nodeType":"405","messageId":"406","endLine":21,"endColumn":11},{"ruleId":"403","severity":1,"message":"417","line":2,"column":8,"nodeType":"405","messageId":"406","endLine":2,"endColumn":13},{"ruleId":"403","severity":1,"message":"437","line":4,"column":8,"nodeType":"405","messageId":"406","endLine":4,"endColumn":28},{"ruleId":"418","severity":1,"message":"419","line":24,"column":13,"nodeType":"409","endLine":24,"endColumn":83},{"ruleId":"403","severity":1,"message":"416","line":2,"column":8,"nodeType":"405","messageId":"406","endLine":2,"endColumn":18},{"ruleId":"403","severity":1,"message":"424","line":4,"column":9,"nodeType":"405","messageId":"406","endLine":4,"endColumn":17},{"ruleId":"403","severity":1,"message":"425","line":4,"column":19,"nodeType":"405","messageId":"406","endLine":4,"endColumn":45},{"ruleId":"403","severity":1,"message":"438","line":27,"column":18,"nodeType":"405","messageId":"406","endLine":27,"endColumn":26},{"ruleId":"403","severity":1,"message":"434","line":27,"column":28,"nodeType":"405","messageId":"406","endLine":27,"endColumn":33},{"ruleId":"403","severity":1,"message":"439","line":3,"column":64,"nodeType":"405","messageId":"406","endLine":3,"endColumn":74},{"ruleId":"403","severity":1,"message":"440","line":1,"column":10,"nodeType":"405","messageId":"406","endLine":1,"endColumn":23},{"ruleId":"403","severity":1,"message":"441","line":12,"column":5,"nodeType":"405","messageId":"406","endLine":12,"endColumn":16},{"ruleId":"412","severity":1,"message":"413","line":25,"column":55,"nodeType":"414","messageId":"415","endLine":25,"endColumn":57},{"ruleId":"412","severity":1,"message":"442","line":82,"column":20,"nodeType":"414","messageId":"415","endLine":82,"endColumn":22},{"ruleId":"403","severity":1,"message":"443","line":107,"column":33,"nodeType":"405","messageId":"406","endLine":107,"endColumn":43},{"ruleId":"403","severity":1,"message":"444","line":109,"column":15,"nodeType":"405","messageId":"406","endLine":109,"endColumn":19},{"ruleId":"403","severity":1,"message":"445","line":1,"column":17,"nodeType":"405","messageId":"406","endLine":1,"endColumn":26},{"ruleId":"418","severity":1,"message":"419","line":12,"column":21,"nodeType":"409","endLine":12,"endColumn":69},{"ruleId":"403","severity":1,"message":"445","line":1,"column":17,"nodeType":"405","messageId":"406","endLine":1,"endColumn":26},{"ruleId":"403","severity":1,"message":"404","line":1,"column":8,"nodeType":"405","messageId":"406","endLine":1,"endColumn":12},{"ruleId":"403","severity":1,"message":"422","line":5,"column":26,"nodeType":"405","messageId":"406","endLine":5,"endColumn":35},{"ruleId":"403","severity":1,"message":"423","line":10,"column":8,"nodeType":"405","messageId":"406","endLine":10,"endColumn":18},{"ruleId":"403","severity":1,"message":"424","line":19,"column":9,"nodeType":"405","messageId":"406","endLine":19,"endColumn":17},{"ruleId":"403","severity":1,"message":"425","line":19,"column":19,"nodeType":"405","messageId":"406","endLine":19,"endColumn":45},{"ruleId":"403","severity":1,"message":"426","line":20,"column":8,"nodeType":"405","messageId":"406","endLine":20,"endColumn":22},{"ruleId":"403","severity":1,"message":"427","line":21,"column":8,"nodeType":"405","messageId":"406","endLine":21,"endColumn":15},{"ruleId":"412","severity":1,"message":"413","line":47,"column":45,"nodeType":"414","messageId":"415","endLine":47,"endColumn":47},{"ruleId":"403","severity":1,"message":"435","line":56,"column":19,"nodeType":"405","messageId":"406","endLine":56,"endColumn":26},{"ruleId":"412","severity":1,"message":"413","line":100,"column":40,"nodeType":"414","messageId":"415","endLine":100,"endColumn":42},{"ruleId":"403","severity":1,"message":"434","line":23,"column":28,"nodeType":"405","messageId":"406","endLine":23,"endColumn":33},{"ruleId":"412","severity":1,"message":"413","line":68,"column":45,"nodeType":"414","messageId":"415","endLine":68,"endColumn":47},{"ruleId":"403","severity":1,"message":"435","line":77,"column":19,"nodeType":"405","messageId":"406","endLine":77,"endColumn":26},{"ruleId":"412","severity":1,"message":"413","line":108,"column":40,"nodeType":"414","messageId":"415","endLine":108,"endColumn":42},{"ruleId":"403","severity":1,"message":"416","line":2,"column":8,"nodeType":"405","messageId":"406","endLine":2,"endColumn":18},{"ruleId":"403","severity":1,"message":"424","line":4,"column":9,"nodeType":"405","messageId":"406","endLine":4,"endColumn":17},{"ruleId":"403","severity":1,"message":"425","line":4,"column":19,"nodeType":"405","messageId":"406","endLine":4,"endColumn":45},{"ruleId":"403","severity":1,"message":"438","line":27,"column":18,"nodeType":"405","messageId":"406","endLine":27,"endColumn":26},{"ruleId":"403","severity":1,"message":"434","line":27,"column":28,"nodeType":"405","messageId":"406","endLine":27,"endColumn":33},{"ruleId":"407","severity":1,"message":"408","line":17,"column":72,"nodeType":"409","endLine":17,"endColumn":147},{"ruleId":"428","severity":1,"message":"429","line":64,"column":59,"nodeType":"430","messageId":"431","endLine":64,"endColumn":61},{"ruleId":"412","severity":1,"message":"413","line":66,"column":41,"nodeType":"414","messageId":"415","endLine":66,"endColumn":43},{"ruleId":"407","severity":1,"message":"408","line":13,"column":66,"nodeType":"409","endLine":13,"endColumn":135},{"ruleId":"403","severity":1,"message":"436","line":21,"column":7,"nodeType":"405","messageId":"406","endLine":21,"endColumn":11},{"ruleId":"403","severity":1,"message":"416","line":2,"column":8,"nodeType":"405","messageId":"406","endLine":2,"endColumn":18},{"ruleId":"412","severity":1,"message":"413","line":25,"column":55,"nodeType":"414","messageId":"415","endLine":25,"endColumn":57},{"ruleId":"412","severity":1,"message":"442","line":82,"column":20,"nodeType":"414","messageId":"415","endLine":82,"endColumn":22},{"ruleId":"403","severity":1,"message":"443","line":107,"column":33,"nodeType":"405","messageId":"406","endLine":107,"endColumn":43},{"ruleId":"403","severity":1,"message":"444","line":109,"column":15,"nodeType":"405","messageId":"406","endLine":109,"endColumn":19},{"ruleId":"403","severity":1,"message":"417","line":2,"column":8,"nodeType":"405","messageId":"406","endLine":2,"endColumn":13},{"ruleId":"403","severity":1,"message":"437","line":4,"column":8,"nodeType":"405","messageId":"406","endLine":4,"endColumn":28},{"ruleId":"418","severity":1,"message":"419","line":24,"column":13,"nodeType":"409","endLine":24,"endColumn":83},{"ruleId":"403","severity":1,"message":"445","line":1,"column":17,"nodeType":"405","messageId":"406","endLine":1,"endColumn":26},{"ruleId":"418","severity":1,"message":"419","line":12,"column":21,"nodeType":"409","endLine":12,"endColumn":69},{"ruleId":"403","severity":1,"message":"440","line":1,"column":10,"nodeType":"405","messageId":"406","endLine":1,"endColumn":23},{"ruleId":"403","severity":1,"message":"441","line":12,"column":5,"nodeType":"405","messageId":"406","endLine":12,"endColumn":16},{"ruleId":"403","severity":1,"message":"439","line":3,"column":64,"nodeType":"405","messageId":"406","endLine":3,"endColumn":74},{"ruleId":"403","severity":1,"message":"445","line":1,"column":17,"nodeType":"405","messageId":"406","endLine":1,"endColumn":26},"no-native-reassign",["446"],"no-negated-in-lhs",["447"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["446"],["447"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'DatePicker' is defined but never used.","'axios' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["446"],["447"],"'useEffect' is defined but never used.","'CreateUser' is defined but never used.","'useAuth0' is defined but never used.","'withAuthenticationRequired' is defined but never used.","'ProtectedRoute' is defined but never used.","'Loading' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["446"],["447"],"'email' is assigned a value but never used.","'matched' is assigned a value but never used.","'Test' is assigned a value but never used.","'AuthenticationButton' is defined but never used.","'nickname' is assigned a value but never used.","'NavBtnLink' is defined but never used.","'Auth0Provider' is defined but never used.","'SideBtnLink' is defined but never used.","Expected '!==' and instead saw '!='.","'last_login' is assigned a value but never used.","'test' is assigned a value but never used.","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]