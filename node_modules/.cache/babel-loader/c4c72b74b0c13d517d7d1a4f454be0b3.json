{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\djnin\\\\Web Dev Projects\\\\BirdieTracker2\\\\frontend\\\\src\\\\components\\\\edit-course.component.js\";\nimport React, { Component } from 'react';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class EditCourse extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onAddHole = () => {\n      this.setState({\n        holes: this.state.holes.concat([{\n          par: 3\n        }])\n      });\n    };\n\n    this.onRemoveHole = idx => () => {\n      this.setState({\n        holes: this.state.holes.filter((s, sidx) => idx !== sidx)\n      });\n    };\n\n    this.onChangeHoles = idx => e => {\n      const newHoles = this.state.holes.map((hole, sidx) => {\n        if (idx !== sidx) return hole;\n        return { ...hole,\n          par: e.target.value\n        };\n      });\n      this.setState(state => ({ ...state,\n        holes: newHoles\n      }), () => {//callback function to ensure state is updated before elements are rendered\n      });\n    };\n\n    this.onChangeName = this.onChangeName.bind(this);\n    this.onChangeLocation = this.onChangeLocation.bind(this);\n    this.onChangeHoles = this.onChangeHoles.bind(this);\n    this.onAddHole = this.onAddHole.bind(this);\n    this.onRemoveHole = this.onRemoveHole.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      name: '',\n      location: '',\n      holes: [],\n      par: 0\n    };\n  }\n\n  componentDidMount() {\n    //get currrent course data to populate state variables\n    axios.get('http://localhost:5000/courses/' + this.props.match.params.id).then(response => {\n      this.setState({\n        name: response.data.name,\n        location: response.data.location,\n        holes: response.data.holes,\n        par: response.data.par\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  } //triggered by user changing course name in the select field\n\n\n  onChangeName(e) {\n    this.setState({\n      name: e.target.value\n    });\n  } //triggered by the user changing location in the select field\n\n\n  onChangeLocation(e) {\n    this.setState({\n      location: e.target.value\n    });\n  } //triggered when user clicks \"add hole\" button\n\n\n  onSubmit(e) {\n    e.preventDefault(); //calculate the total par for the entire course\n\n    let temp = 0;\n\n    for (let i = 0; i < this.state.holes.length; i++) {\n      temp = temp + parseInt(this.state.holes[i].par);\n    } //store the total par in the state and then save the updated course object\n\n\n    this.setState(state => ({ ...state,\n      par: temp\n    }), () => {\n      //callback function to ensure state is updated before elements are rendered\n      const course = {\n        name: this.state.name,\n        location: this.state.location,\n        holes: this.state.holes,\n        par: this.state.par\n      };\n      axios.post('http://localhost:5000/courses/update/' + this.props.match.params.id, course).then(res => console.log(res.data)).catch(error => {\n        console.log(error);\n      }); //redirect the user back to the course list page\n\n      window.location = '/courselist';\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Change Courses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            required: true,\n            className: \"form-control\",\n            value: this.state.name,\n            onChange: this.onChangeName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Location: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            required: true,\n            className: \"form-control\",\n            value: this.state.location,\n            onChange: this.onChangeLocation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), this.state.holes.map((hole, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hole\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: hole.par,\n            onChange: this.onChangeHoles(idx)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: this.onRemoveHole(idx),\n            className: \"small\",\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 21\n          }, this)]\n        }, hole._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: this.onAddHole,\n          className: \"small\",\n          children: \"Add Hole\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Submit Changes\",\n            className: \"btn btn-primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/djnin/Web Dev Projects/BirdieTracker2/frontend/src/components/edit-course.component.js"],"names":["React","Component","DatePicker","axios","EditCourse","constructor","props","onAddHole","setState","holes","state","concat","par","onRemoveHole","idx","filter","s","sidx","onChangeHoles","e","newHoles","map","hole","target","value","onChangeName","bind","onChangeLocation","onSubmit","name","location","componentDidMount","get","match","params","id","then","response","data","catch","error","console","log","preventDefault","temp","i","length","parseInt","course","post","res","window","render","_id"],"mappings":"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","sourcesContent":["import React, { Component} from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from 'axios';\r\n\r\nexport default class EditCourse extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeName = this.onChangeName.bind(this);\r\n        this.onChangeLocation = this.onChangeLocation.bind(this);\r\n        this.onChangeHoles = this.onChangeHoles.bind(this);\r\n        this.onAddHole = this.onAddHole.bind(this);\r\n        this.onRemoveHole = this.onRemoveHole.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            name: '',\r\n            location: '',\r\n            holes: [],\r\n            par: 0,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        //get currrent course data to populate state variables\r\n        axios.get('http://localhost:5000/courses/'+this.props.match.params.id)\r\n        .then(response => {\r\n            this.setState({\r\n                name: response.data.name,\r\n                location: response.data.location,\r\n                holes: response.data.holes,\r\n                par: response.data.par,\r\n            })\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    //triggered by user changing course name in the select field\r\n    onChangeName(e) {\r\n        this.setState({\r\n            name: e.target.value\r\n        })\r\n    }\r\n\r\n    //triggered by the user changing location in the select field\r\n    onChangeLocation(e) {\r\n        this.setState({\r\n            location: e.target.value\r\n        })\r\n    }\r\n\r\n    //triggered when user clicks \"add hole\" button\r\n    onAddHole = () => {\r\n        this.setState({\r\n            holes: this.state.holes.concat([{par: 3}])\r\n        })\r\n    }\r\n\r\n    //triggered by user clicking \"-\" button to remove a hole\r\n    onRemoveHole = idx => () => {\r\n        this.setState({\r\n            holes: this.state.holes.filter((s, sidx) => idx !== sidx)\r\n        })\r\n    }\r\n\r\n    //triggered by user changing the par value of a single hole\r\n    onChangeHoles = idx => e => {\r\n        const newHoles = this.state.holes.map((hole, sidx) => {\r\n            if (idx !== sidx) return hole;\r\n            return {...hole, par: e.target.value };\r\n        });\r\n\r\n        this.setState(state => ({...state, holes: newHoles}), () => {\r\n            //callback function to ensure state is updated before elements are rendered\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        //calculate the total par for the entire course\r\n        let temp = 0;\r\n        for (let i = 0; i < this.state.holes.length; i++) {\r\n            temp = temp + parseInt(this.state.holes[i].par);\r\n        }\r\n\r\n        //store the total par in the state and then save the updated course object\r\n        this.setState(state => ({...state, par: temp}), () => {\r\n            //callback function to ensure state is updated before elements are rendered\r\n        \r\n            const course = {\r\n                name: this.state.name,\r\n                location: this.state.location,\r\n                holes: this.state.holes,\r\n                par: this.state.par \r\n            }\r\n    \r\n            axios.post('http://localhost:5000/courses/update/'+this.props.match.params.id, course)\r\n            .then(res => console.log(res.data))\r\n            .catch((error) => {\r\n              console.log(error);\r\n            })\r\n    \r\n            //redirect the user back to the course list page\r\n            window.location = '/courselist';\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n          <h3>Change Courses</h3>\r\n          <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\"> \r\n                <label>Name: </label>\r\n                <input  type=\"text\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={this.state.name}\r\n                    onChange={this.onChangeName}\r\n                    />\r\n                </div>\r\n            <div>\r\n                \r\n            </div>\r\n            <div className=\"form-group\"> \r\n              <label>Location: </label>\r\n              <input  type=\"text\"\r\n                  required\r\n                  className=\"form-control\"\r\n                  value={this.state.location}\r\n                  onChange={this.onChangeLocation}\r\n                  />\r\n            </div>\r\n\r\n            {this.state.holes.map((hole, idx) => (\r\n                <div className=\"hole\" key={hole._id}>\r\n                    <input\r\n                        type=\"number\"\r\n                        value={hole.par}\r\n                        onChange={this.onChangeHoles(idx)}\r\n                    />\r\n                    <button\r\n                        type = \"button\"\r\n                        onClick={this.onRemoveHole(idx)}\r\n                        className=\"small\"\r\n                    >\r\n                        -\r\n                    </button>\r\n                </div>\r\n            ))}\r\n            <button\r\n                type=\"button\"\r\n                onClick={this.onAddHole}\r\n                className=\"small\"\r\n            >\r\n                Add Hole\r\n            </button>\r\n    \r\n            <div className=\"form-group\">\r\n              <input type=\"submit\" value=\"Submit Changes\" className=\"btn btn-primary\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n        )\r\n      }\r\n}"]},"metadata":{},"sourceType":"module"}