{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\djnin\\\\Web Dev Projects\\\\DiscGolfTrackScore\\\\frontend\\\\src\\\\components\\\\create-scorecard.component.js\";\nimport React, { Component } from 'react';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class CreateScorecard extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeCourse = this.onChangeCourse.bind(this);\n    this.onChangeScore = this.onChangeScore.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      username: '',\n      course: '',\n      score: 0,\n      numHoles: 0,\n      scores: [],\n      date: new Date(),\n      users: [],\n      courses: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/users/').then(response => {\n      if (response.data.length > 0) {\n        this.setState({\n          users: response.data.map(user => user.username),\n          username: response.data[0].username\n        });\n      }\n    });\n    axios.get('http://localhost:5000/courses/').then(response => {\n      if (response.data.length > 0) {\n        this.setState({\n          //courses: response.data.map(course => course.name),\n          courses: response.data,\n          course: response.data[0].name\n        });\n      }\n    });\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeCourse(e) {\n    this.setState({\n      course: e.target.value\n    }); //set the number of holes based on which course is selected\n\n    for (let i = 0; i < this.state.courses.length; i++) {\n      if (this.state.courses[i].name = this.state.course) {\n        this.setState({\n          numHoles: this.state.courses[i].holes.length\n        });\n        console.log(scorecard);\n      }\n    }\n  }\n\n  onChangeScore(e) {\n    this.setState({\n      score: e.target.value\n    });\n  }\n\n  onChangeDate(date) {\n    this.setState({\n      date: date\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const scorecard = {\n      username: this.state.username,\n      course: this.state.course,\n      score: this.state.score,\n      date: this.state.date,\n      scores: this.state.scores\n    };\n    console.log(scorecard);\n    axios.post('http://localhost:5000/scorecards/add', scorecard).then(res => console.log(res.data));\n    window.location = '/scorecardlist';\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create New Scorecard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Username: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            ref: \"userInput\",\n            required: true,\n            className: \"form-control\",\n            value: this.state.username,\n            onChange: this.onChangeUsername,\n            children: this.state.users.map(function (user) {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: user,\n                children: user\n              }, user, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 30\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Course: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            ref: \"userInput\",\n            required: true,\n            className: \"form-control\",\n            value: this.state.course,\n            onChange: this.onChangeCourse,\n            children: this.state.courses.map(function (course) {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: course.name,\n                children: course.name\n              }, course.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 30\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Score: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: this.state.score,\n            onChange: this.onChangeScore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              selected: this.state.date,\n              onChange: this.onChangeDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Create Scorecard\",\n            className: \"btn btn-primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/djnin/Web Dev Projects/DiscGolfTrackScore/frontend/src/components/create-scorecard.component.js"],"names":["React","Component","DatePicker","axios","CreateScorecard","constructor","props","onChangeUsername","bind","onChangeCourse","onChangeScore","onChangeDate","onSubmit","state","username","course","score","numHoles","scores","date","Date","users","courses","componentDidMount","get","then","response","data","length","setState","map","user","name","e","target","value","i","holes","console","log","scorecard","preventDefault","post","res","window","location","render"],"mappings":"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","sourcesContent":["import React, { Component} from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from 'axios';\r\n\r\nexport default class CreateScorecard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangeCourse = this.onChangeCourse.bind(this);\r\n        this.onChangeScore = this.onChangeScore.bind(this);\r\n        this.onChangeDate = this.onChangeDate.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            username: '',\r\n            course: '',\r\n            score: 0,\r\n            numHoles: 0,\r\n            scores: [],\r\n            date: new Date(),\r\n            users: [],\r\n            courses: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:5000/users/')\r\n        .then(response => {\r\n          if (response.data.length > 0) {\r\n            this.setState({\r\n              users: response.data.map(user => user.username),\r\n              username: response.data[0].username\r\n            })\r\n          }\r\n        })\r\n        axios.get('http://localhost:5000/courses/')\r\n        .then(response => {\r\n          if (response.data.length > 0) {\r\n            this.setState({\r\n              //courses: response.data.map(course => course.name),\r\n              courses: response.data,\r\n              course: response.data[0].name\r\n            })\r\n          }\r\n        })\r\n    }\r\n\r\n    onChangeUsername(e) {\r\n        this.setState({\r\n            username: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeCourse(e) {\r\n        this.setState({\r\n            course: e.target.value\r\n        })\r\n\r\n        //set the number of holes based on which course is selected\r\n        for (let i = 0; i < this.state.courses.length; i++) {\r\n          if (this.state.courses[i].name = this.state.course) {\r\n            this.setState({\r\n              numHoles: this.state.courses[i].holes.length\r\n            });\r\n            console.log(scorecard);\r\n          }\r\n        }\r\n    }\r\n\r\n    onChangeScore(e) {\r\n        this.setState({\r\n            score: e.target.value\r\n        })\r\n    }\r\n\r\n    onChangeDate(date) {\r\n        this.setState({\r\n            date: date\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const scorecard = {\r\n            username: this.state.username,\r\n            course: this.state.course,\r\n            score: this.state.score,\r\n            date: this.state.date,\r\n            scores: this.state.scores\r\n        }\r\n\r\n        console.log(scorecard);\r\n\r\n        axios.post('http://localhost:5000/scorecards/add', scorecard)\r\n        .then(res => console.log(res.data));\r\n\r\n        window.location = '/scorecardlist';\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n          <h3>Create New Scorecard</h3>\r\n          <form onSubmit={this.onSubmit}>\r\n            <div className=\"form-group\"> \r\n              <label>Username: </label>\r\n              <select ref=\"userInput\"\r\n                  required\r\n                  className=\"form-control\"\r\n                  value={this.state.username}\r\n                  onChange={this.onChangeUsername}>\r\n                  {\r\n                    this.state.users.map(function(user) {\r\n                      return <option \r\n                        key={user}\r\n                        value={user}>{user}\r\n                        </option>;\r\n                    })\r\n                  }\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\"> \r\n              <label>Course: </label>\r\n              <select ref=\"userInput\"\r\n                  required\r\n                  className=\"form-control\"\r\n                  value={this.state.course}\r\n                  onChange={this.onChangeCourse}>\r\n                  {\r\n                    this.state.courses.map(function(course) {\r\n                      return <option \r\n                        key={course.name}\r\n                        value={course.name}>{course.name}\r\n                        </option>;\r\n                    })\r\n                  }\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Score: </label>\r\n              <input \r\n                  type=\"text\" \r\n                  className=\"form-control\"\r\n                  value={this.state.score}\r\n                  onChange={this.onChangeScore}\r\n                  />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Date: </label>\r\n              <div>\r\n                <DatePicker\r\n                  selected={this.state.date}\r\n                  onChange={this.onChangeDate}\r\n                />\r\n              </div>\r\n            </div>\r\n    \r\n            <div className=\"form-group\">\r\n              <input type=\"submit\" value=\"Create Scorecard\" className=\"btn btn-primary\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n        )\r\n      }\r\n}"]},"metadata":{},"sourceType":"module"}