{"ast":null,"code":"import _objectSpread from\"C:/Users/djnin/Web Dev Projects/BirdieTracker v3/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"C:/Users/djnin/Web Dev Projects/BirdieTracker v3/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/djnin/Web Dev Projects/BirdieTracker v3/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:/Users/djnin/Web Dev Projects/BirdieTracker v3/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:/Users/djnin/Web Dev Projects/BirdieTracker v3/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/djnin/Web Dev Projects/BirdieTracker v3/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import DatePicker from'react-datepicker';import\"react-datepicker/dist/react-datepicker.css\";import axios from'axios';import{withAuth0}from'@auth0/auth0-react';import LoginMessage from\"./login-message.component\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CreateScorecard=/*#__PURE__*/function(_Component){_inherits(CreateScorecard,_Component);var _super=_createSuper(CreateScorecard);function CreateScorecard(props){var _this;_classCallCheck(this,CreateScorecard);_this=_super.call(this,props);_this.onChangeScores=function(idx){return function(e){var newScores=_this.state.scores.map(function(score,sidx){if(idx!==sidx)return score;return _objectSpread(_objectSpread({},score),{},{par:e.target.value});});_this.setState(function(state){return _objectSpread(_objectSpread({},state),{},{scores:newScores});},function(){//callback function to ensure state is updated before elements are rendered\n});};};_this.onChangeCourse=_this.onChangeCourse.bind(_assertThisInitialized(_this));_this.onChangeDate=_this.onChangeDate.bind(_assertThisInitialized(_this));_this.onSubmit=_this.onSubmit.bind(_assertThisInitialized(_this));_this.updateScores=_this.updateScores.bind(_assertThisInitialized(_this));_this.onChangeScores=_this.onChangeScores.bind(_assertThisInitialized(_this));var isAuthenticated=_this.props.auth0.isAuthenticated;if(isAuthenticated){var user=_this.props.auth0.user;var nickname=user.nickname,email=user.email;_this.state={username:nickname,course:'',score:0,par:0,scores:[],date:new Date(),users:[],courses:[],isAuth:isAuthenticated,userAccount:null};}else{_this.state={username:'',course:'',score:0,par:0,scores:[],date:new Date(),users:[],courses:[],isAuth:false,userAccount:null};}return _this;}_createClass(CreateScorecard,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;//user must be logged in or else we will be adding blank user objects\nif(this.state.isAuth){//load in user data \naxios.get('https://birdie-tracker.herokuapp.com/users/').then(function(response){if(response.data.length>0){var matched=false;//search through the users and find the one associated with our logged in user\nvar _loop=function _loop(i){if(response.data[i].username==_this2.state.username){console.log(\"Match found\");//once correct user is found, save their info in the state to be used later\n//when updating the user object. \n_this2.setState(function(state){return _objectSpread(_objectSpread({},state),{},{userAccount:response.data[i]});});matched=true;return\"break\";}};for(var i=0;i<response.data.length;i++){var _ret=_loop(i);if(_ret===\"break\")break;}}});//load in course data for dropdown select\naxios.get('https://birdie-tracker.herokuapp.com/courses/').then(function(response){if(response.data.length>0){_this2.setState(function(state){return _objectSpread(_objectSpread({},state),{},{courses:response.data,course:response.data[0].name,scores:response.data[0].holes,holes:response.data[0].holes,par:response.data[0].par});},function(){//callback function to ensure state is updated before elements are rendered\n});}});}}//loops through the courses array to find the one the user selected\n//then updates the state with the corresponding values for scores and par\n//so that the form elements for the individual scores can be rendered\n},{key:\"updateScores\",value:function updateScores(){var _this3=this;var _loop2=function _loop2(i){if(_this3.state.courses[i].name==_this3.state.course){_this3.setState(function(state){return _objectSpread(_objectSpread({},state),{},{scores:_this3.state.courses[i].holes,par:_this3.state.courses[i].par});},function(){//callback function to ensure state is updated before elements are rendered\n});}};//set the number of holes based on which course is selected\nfor(var i=0;i<this.state.courses.length;i++){_loop2(i);}}//triggered by the user changing the score for an individual hole\n},{key:\"onChangeCourse\",value://triggered by the user changing the course\n//calls updateScores() function to re-render the holes for the newly selected course\nfunction onChangeCourse(e){var _this4=this;this.setState(function(state){return _objectSpread(_objectSpread({},state),{},{course:e.target.value});},function(){_this4.updateScores();});}//triggered by the user changing the date in the select field\n},{key:\"onChangeDate\",value:function onChangeDate(date){this.setState({date:date});}},{key:\"onSubmit\",value:function onSubmit(e){var _this5=this;e.preventDefault();//calculate the total score based on the individual holes\nvar round_score=0;for(var i=0;i<this.state.scores.length;i++){round_score=round_score+parseInt(this.state.scores[i].par);}//set the score in the state and wait to post the new\n//scorecard until the state is updated by using\n//callback function\nthis.setState(function(state){return _objectSpread(_objectSpread({},state),{},{score:round_score});},function(){var scorecard={username:_this5.state.username,course:_this5.state.course,score:_this5.state.score,date:_this5.state.date,scores:_this5.state.scores,par:_this5.state.par};axios.post('https://birdie-tracker.herokuapp.com/scorecards/add',scorecard).then(function(res){return console.log(res.data);});});//can only update user statistics if a user account exists\nif(this.state.userAccount!=null){var new_best=this.state.userAccount.best_score;var new_worst=this.state.userAccount.worst_score;var score=round_score-this.state.par;if(score<this.state.userAccount.best_score){new_best=score;}if(score>this.state.userAccount.worst_score){new_worst=score;}var user={username:this.state.userAccount.username,//update the user object by adding one to the number of rounds played\nrounds_played:this.state.userAccount.rounds_played+1,best_score:new_best,worst_score:new_worst};console.log(user);//update the user object in the database\naxios.post('https://birdie-tracker.herokuapp.com/users/update/'+this.state.userAccount._id,user).then(function(res){return console.log(res.data);}).catch(function(error){console.log(error);});}window.location='https://birdie-tracker.netlify.app/scorecardlist';}},{key:\"render\",value:function render(){var _this6=this;if(!this.state.isAuth){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(LoginMessage,{})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"scorecard_elements\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"profile_header\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"Create Scorecard\"})}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:this.onSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Course: \"}),/*#__PURE__*/_jsx(\"select\",{ref:\"userInput\",required:true,className:\"form-control\",value:this.state.course,onChange:this.onChangeCourse,children:this.state.courses.map(function(course){return/*#__PURE__*/_jsx(\"option\",{value:course.name,children:course.name},course.name);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Date: \"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(DatePicker,{selected:this.state.date,onChange:this.onChangeDate})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"score_boxes\",children:this.state.scores.map(function(score,idx){return/*#__PURE__*/_jsxs(\"div\",{className:\"score\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Hole \",idx+1,\" score: \"]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:score.par,onChange:_this6.onChangeScores(idx)})})]},score._id);})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"Create Scorecard\",className:\"btn btn-primary\"})})]})]});}}]);return CreateScorecard;}(Component);//export withAuth0 to allow use of user's username for the scorecard\nexport default withAuth0(CreateScorecard);","map":{"version":3,"sources":["C:/Users/djnin/Web Dev Projects/BirdieTracker v3/frontend/src/components/create-scorecard.component.js"],"names":["React","Component","DatePicker","axios","withAuth0","LoginMessage","CreateScorecard","props","onChangeScores","idx","e","newScores","state","scores","map","score","sidx","par","target","value","setState","onChangeCourse","bind","onChangeDate","onSubmit","updateScores","isAuthenticated","auth0","user","nickname","email","username","course","date","Date","users","courses","isAuth","userAccount","get","then","response","data","length","matched","i","console","log","name","holes","preventDefault","round_score","parseInt","scorecard","post","res","new_best","best_score","new_worst","worst_score","rounds_played","_id","catch","error","window","location"],"mappings":"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","sourcesContent":["import React, { Component} from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from 'axios';\r\nimport { withAuth0 } from '@auth0/auth0-react';\r\nimport LoginMessage from \"./login-message.component\";\r\n\r\nclass CreateScorecard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeCourse = this.onChangeCourse.bind(this);\r\n        this.onChangeDate = this.onChangeDate.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.updateScores = this.updateScores.bind(this);\r\n        this.onChangeScores = this.onChangeScores.bind(this);\r\n\r\n        const {isAuthenticated } = this.props.auth0;\r\n\r\n        if (isAuthenticated) {\r\n          const { user } = this.props.auth0;\r\n          const {nickname, email} = user;\r\n          this.state = {\r\n            username: nickname,\r\n            course: '',\r\n            score: 0,\r\n            par: 0,\r\n            scores: [],\r\n            date: new Date(),\r\n            users: [],\r\n            courses: [],\r\n            isAuth: isAuthenticated,\r\n            userAccount: null,\r\n          }\r\n        }\r\n\r\n        else {\r\n          this.state = {\r\n            username: '',\r\n            course: '',\r\n            score: 0,\r\n            par: 0,\r\n            scores: [],\r\n            date: new Date(),\r\n            users: [],\r\n            courses: [],\r\n            isAuth: false,\r\n            userAccount: null,\r\n        }\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n      //user must be logged in or else we will be adding blank user objects\r\n      if (this.state.isAuth) {\r\n\r\n        //load in user data \r\n        axios.get('https://birdie-tracker.herokuapp.com/users/')\r\n        .then(response => {\r\n          if (response.data.length > 0) {\r\n\r\n            let matched = false;\r\n            //search through the users and find the one associated with our logged in user\r\n            for (let i = 0; i < response.data.length; i++) {\r\n              if (response.data[i].username == this.state.username) {\r\n                  console.log(\"Match found\");\r\n\r\n                  //once correct user is found, save their info in the state to be used later\r\n                  //when updating the user object. \r\n                  this.setState(state => ({\r\n                    ...state,\r\n                    userAccount: response.data[i],\r\n                  }))\r\n                  matched = true;\r\n                  break;\r\n              }\r\n            }\r\n          }\r\n        })\r\n\r\n        //load in course data for dropdown select\r\n        axios.get('https://birdie-tracker.herokuapp.com/courses/')\r\n        .then(response => {\r\n          if (response.data.length > 0) {\r\n            this.setState(state => ({...state,\r\n              courses: response.data,\r\n              course: response.data[0].name,\r\n              scores: response.data[0].holes,\r\n              holes: response.data[0].holes,\r\n              par: response.data[0].par,\r\n            }), () => {\r\n              //callback function to ensure state is updated before elements are rendered\r\n            })\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    //loops through the courses array to find the one the user selected\r\n    //then updates the state with the corresponding values for scores and par\r\n    //so that the form elements for the individual scores can be rendered\r\n    updateScores() {\r\n      //set the number of holes based on which course is selected\r\n      for (let i = 0; i < this.state.courses.length; i++) {\r\n        if (this.state.courses[i].name == this.state.course) {\r\n          this.setState(state=> ({...state, \r\n            scores: this.state.courses[i].holes,\r\n            par: this.state.courses[i].par}), () => {\r\n            //callback function to ensure state is updated before elements are rendered\r\n\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    //triggered by the user changing the score for an individual hole\r\n    onChangeScores = idx => e => {\r\n      const newScores = this.state.scores.map((score, sidx) => {\r\n          if (idx !== sidx) return score;\r\n          return {...score, par: e.target.value };\r\n      });\r\n\r\n      this.setState(state => ({...state, scores: newScores}), () => {\r\n        //callback function to ensure state is updated before elements are rendered\r\n      });\r\n  }\r\n\r\n    //triggered by the user changing the course\r\n    //calls updateScores() function to re-render the holes for the newly selected course\r\n    onChangeCourse(e) {\r\n        this.setState(state => ({...state, course: e.target.value}), () => {\r\n          this.updateScores();\r\n        })\r\n    }\r\n\r\n    //triggered by the user changing the date in the select field\r\n    onChangeDate(date) {\r\n        this.setState({\r\n            date: date\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        //calculate the total score based on the individual holes\r\n        let round_score = 0;\r\n        for (let i = 0; i < this.state.scores.length; i++) {\r\n          round_score = round_score + parseInt(this.state.scores[i].par);\r\n        }\r\n\r\n        //set the score in the state and wait to post the new\r\n        //scorecard until the state is updated by using\r\n        //callback function\r\n        this.setState(state => ({...state, score: round_score}), () => {\r\n\r\n          const scorecard = {\r\n            username: this.state.username,\r\n            course: this.state.course,\r\n            score: this.state.score,\r\n            date: this.state.date,\r\n            scores: this.state.scores,\r\n            par: this.state.par\r\n          }\r\n\r\n          axios.post('https://birdie-tracker.herokuapp.com/scorecards/add', scorecard)\r\n          .then(res => console.log(res.data));\r\n\r\n        })\r\n\r\n        //can only update user statistics if a user account exists\r\n        if (this.state.userAccount != null) {\r\n\r\n          let new_best = this.state.userAccount.best_score;\r\n          let new_worst = this.state.userAccount.worst_score;\r\n          let score = round_score - this.state.par;\r\n          if ( score < this.state.userAccount.best_score) {\r\n            new_best = score;\r\n          }\r\n          if ( score > this.state.userAccount.worst_score) {\r\n            new_worst = score;\r\n          }\r\n          \r\n\r\n          const user = {\r\n            username: this.state.userAccount.username,\r\n            //update the user object by adding one to the number of rounds played\r\n            rounds_played: this.state.userAccount.rounds_played + 1,\r\n            best_score: new_best,\r\n            worst_score: new_worst,\r\n          }\r\n  \r\n          console.log(user);\r\n          \r\n          //update the user object in the database\r\n          axios.post('https://birdie-tracker.herokuapp.com/users/update/'+this.state.userAccount._id, user)\r\n          .then(res => console.log(res.data))\r\n          .catch((error) => {\r\n            console.log(error);\r\n          })\r\n\r\n        }\r\n        \r\n        window.location = 'https://birdie-tracker.netlify.app/scorecardlist';\r\n    }\r\n\r\n    render() {\r\n\r\n      if (!this.state.isAuth) { \r\n        return (\r\n            <div>\r\n              <LoginMessage/>\r\n            </div>\r\n        )\r\n      }\r\n\r\n        return (\r\n        <div className = \"scorecard_elements\">\r\n\r\n          <div className =\"profile_header\">\r\n            <h3>Create Scorecard</h3>\r\n          </div>\r\n\r\n          <form onSubmit={this.onSubmit}>\r\n\r\n            <div className=\"form-group\"> \r\n              <label>Course: </label>\r\n              <select ref=\"userInput\"\r\n                  required\r\n                  className=\"form-control\"\r\n                  value={this.state.course}\r\n                  onChange={this.onChangeCourse}>\r\n                  {\r\n                    this.state.courses.map(function(course) {\r\n                      return <option \r\n                        key={course.name}\r\n                        value={course.name}>{course.name}\r\n                        </option>;\r\n                    })\r\n                  }\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Date: </label>\r\n              <div>\r\n                <DatePicker\r\n                  selected={this.state.date}\r\n                  onChange={this.onChangeDate}\r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"score_boxes\">\r\n              {this.state.scores.map((score, idx) => (\r\n                  <div className=\"score\" key={score._id}>\r\n                    <label>Hole {idx + 1} score: </label>\r\n                      <div>\r\n                        <input\r\n                            type=\"number\"\r\n                            value={score.par}\r\n                            onChange={this.onChangeScores(idx)}\r\n                        />\r\n                      </div>\r\n                  </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <input type=\"submit\" value=\"Create Scorecard\" className=\"btn btn-primary\" />\r\n            </div>\r\n          </form>\r\n\r\n        </div>\r\n        )\r\n      }\r\n}\r\n\r\n//export withAuth0 to allow use of user's username for the scorecard\r\nexport default withAuth0(CreateScorecard);"]},"metadata":{},"sourceType":"module"}